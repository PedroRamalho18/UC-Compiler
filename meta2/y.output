Terminals unused in grammar

    RESERVED


Grammar

    0 $accept: program $end

    1 program: FunctionsAndDeclarations

    2 FunctionsAndDeclarations: FunctionDefinition
    3                         | FunctionDeclaration
    4                         | Declaration
    5                         | FunctionDefinition FunctionsAndDeclarations
    6                         | FunctionDeclaration FunctionsAndDeclarations
    7                         | Declaration FunctionsAndDeclarations

    8 FunctionDefinition: TypeSpec FunctionDeclarator FunctionBody

    9 FunctionBody: LBRACE DeclarationsAndStatements RBRACE
   10             | LBRACE RBRACE

   11 DeclarationsAndStatements: Statement DeclarationsAndStatements
   12                          | Declaration DeclarationsAndStatements
   13                          | Statement
   14                          | Declaration

   15 FunctionDeclaration: TypeSpec FunctionDeclarator SEMI

   16 FunctionDeclarator: IDENTIFIER LPAR ParameterList RPAR

   17 ParameterList: ParameterDeclaration
   18              | ParameterDeclaration COMMA ParameterList

   19 ParameterDeclaration: TypeSpec IDENTIFIER
   20                     | TypeSpec

   21 Declaration: TypeSpec Declarator SEMI
   22            | TypeSpec Declarator Declarations SEMI

   23 Declarations: COMMA Declarator
   24             | Declarations COMMA Declarator

   25 TypeSpec: CHAR
   26         | INT
   27         | VOID
   28         | SHORT
   29         | DOUBLE

   30 Declarator: error SEMI
   31           | IDENTIFIER
   32           | IDENTIFIER ASSIGN Expr

   33 Statement: LBRACE error RBRACE
   34          | error SEMI
   35          | SEMI
   36          | Expr SEMI
   37          | LBRACE RBRACE
   38          | LBRACE Statements RBRACE
   39          | IF LPAR Expr RPAR Statement
   40          | IF LPAR Expr RPAR Statement ELSE Statement
   41          | WHILE LPAR Expr RPAR Statement
   42          | RETURN SEMI
   43          | RETURN Expr SEMI

   44 Statements: Statement
   45           | Statements Statement

   46 Expr: IDENTIFIER LPAR error RPAR
   47     | LPAR error RPAR
   48     | IDENTIFIER
   49     | NATURAL
   50     | CHRLIT
   51     | DECIMAL
   52     | LPAR Expr RPAR
   53     | Expr ASSIGN Expr
   54     | Expr COMMA Expr
   55     | Expr PLUS Expr
   56     | Expr MINUS Expr
   57     | Expr MUL Expr
   58     | Expr DIV Expr
   59     | Expr MOD Expr
   60     | Expr OR Expr
   61     | Expr AND Expr
   62     | Expr BITWISEOR Expr
   63     | Expr BITWISEXOR Expr
   64     | Expr BITWISEAND Expr
   65     | Expr EQ Expr
   66     | Expr NE Expr
   67     | Expr LE Expr
   68     | Expr GE Expr
   69     | Expr LT Expr
   70     | Expr GT Expr
   71     | MINUS Expr
   72     | PLUS Expr
   73     | NOT Expr
   74     | IDENTIFIER LPAR RPAR
   75     | IDENTIFIER LPAR ExprList RPAR

   76 ExprList: COMMA Expr
   77         | ExprList COMMA Expr


Terminals, with rules where they appear

    $end (0) 0
    error (256) 30 33 34 46 47
    CHAR (258) 25
    DOUBLE (259) 29
    INT (260) 26
    SHORT (261) 28
    ELSE (262) 40
    WHILE (263) 41
    IF (264) 39 40
    RETURN (265) 42 43
    VOID (266) 27
    BITWISEAND (267) 64
    BITWISEOR (268) 62
    BITWISEXOR (269) 63
    AND (270) 61
    ASSIGN (271) 32 53
    MUL (272) 57
    COMMA (273) 18 23 24 54 76 77
    DIV (274) 58
    EQ (275) 65
    GE (276) 68
    GT (277) 70
    LBRACE (278) 9 10 33 37 38
    LE (279) 67
    LPAR (280) 16 39 40 41 46 47 52 74 75
    LT (281) 69
    MINUS (282) 56 71
    MOD (283) 59
    NE (284) 66
    NOT (285) 73
    OR (286) 60
    PLUS (287) 55 72
    RBRACE (288) 9 10 33 37 38
    RPAR (289) 16 39 40 41 46 47 52 74 75
    SEMI (290) 15 21 22 30 34 35 36 42 43
    IDENTIFIER <token> (291) 16 19 31 32 46 48 74 75
    NATURAL <token> (292) 49
    DECIMAL <token> (293) 51
    CHRLIT <token> (294) 50
    RESERVED <token> (295)


Nonterminals, with rules where they appear

    $accept (41)
        on left: 0
    program <node> (42)
        on left: 1
        on right: 0
    FunctionsAndDeclarations <node> (43)
        on left: 2 3 4 5 6 7
        on right: 1 5 6 7
    FunctionDefinition <node> (44)
        on left: 8
        on right: 2 5
    FunctionBody <node> (45)
        on left: 9 10
        on right: 8
    DeclarationsAndStatements <node> (46)
        on left: 11 12 13 14
        on right: 9 11 12
    FunctionDeclaration <node> (47)
        on left: 15
        on right: 3 6
    FunctionDeclarator <node> (48)
        on left: 16
        on right: 8 15
    ParameterList <node> (49)
        on left: 17 18
        on right: 16 18
    ParameterDeclaration <node> (50)
        on left: 19 20
        on right: 17 18
    Declaration <node> (51)
        on left: 21 22
        on right: 4 7 12 14
    Declarations <node> (52)
        on left: 23 24
        on right: 22 24
    TypeSpec <node> (53)
        on left: 25 26 27 28 29
        on right: 8 15 19 20 21 22
    Declarator <node> (54)
        on left: 30 31 32
        on right: 21 22 23 24
    Statement <node> (55)
        on left: 33 34 35 36 37 38 39 40 41 42 43
        on right: 11 13 39 40 41 44 45
    Statements <node> (56)
        on left: 44 45
        on right: 38 45
    Expr <node> (57)
        on left: 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75
        on right: 32 36 39 40 41 43 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 76 77
    ExprList <node> (58)
        on left: 76 77
        on right: 75 77


State 0

    0 $accept: • program $end
    1 program: • FunctionsAndDeclarations
    2 FunctionsAndDeclarations: • FunctionDefinition
    3                         | • FunctionDeclaration
    4                         | • Declaration
    5                         | • FunctionDefinition FunctionsAndDeclarations
    6                         | • FunctionDeclaration FunctionsAndDeclarations
    7                         | • Declaration FunctionsAndDeclarations
    8 FunctionDefinition: • TypeSpec FunctionDeclarator FunctionBody
   15 FunctionDeclaration: • TypeSpec FunctionDeclarator SEMI
   21 Declaration: • TypeSpec Declarator SEMI
   22            | • TypeSpec Declarator Declarations SEMI
   25 TypeSpec: • CHAR
   26         | • INT
   27         | • VOID
   28         | • SHORT
   29         | • DOUBLE

    CHAR    shift, and go to state 1
    DOUBLE  shift, and go to state 2
    INT     shift, and go to state 3
    SHORT   shift, and go to state 4
    VOID    shift, and go to state 5

    program                   go to state 6
    FunctionsAndDeclarations  go to state 7
    FunctionDefinition        go to state 8
    FunctionDeclaration       go to state 9
    Declaration               go to state 10
    TypeSpec                  go to state 11


State 1

   25 TypeSpec: CHAR •

    $default  reduce using rule 25 (TypeSpec)


State 2

   29 TypeSpec: DOUBLE •

    $default  reduce using rule 29 (TypeSpec)


State 3

   26 TypeSpec: INT •

    $default  reduce using rule 26 (TypeSpec)


State 4

   28 TypeSpec: SHORT •

    $default  reduce using rule 28 (TypeSpec)


State 5

   27 TypeSpec: VOID •

    $default  reduce using rule 27 (TypeSpec)


State 6

    0 $accept: program • $end

    $end  shift, and go to state 12


State 7

    1 program: FunctionsAndDeclarations •

    $default  reduce using rule 1 (program)


State 8

    2 FunctionsAndDeclarations: • FunctionDefinition
    2                         | FunctionDefinition •  [$end]
    3                         | • FunctionDeclaration
    4                         | • Declaration
    5                         | • FunctionDefinition FunctionsAndDeclarations
    5                         | FunctionDefinition • FunctionsAndDeclarations
    6                         | • FunctionDeclaration FunctionsAndDeclarations
    7                         | • Declaration FunctionsAndDeclarations
    8 FunctionDefinition: • TypeSpec FunctionDeclarator FunctionBody
   15 FunctionDeclaration: • TypeSpec FunctionDeclarator SEMI
   21 Declaration: • TypeSpec Declarator SEMI
   22            | • TypeSpec Declarator Declarations SEMI
   25 TypeSpec: • CHAR
   26         | • INT
   27         | • VOID
   28         | • SHORT
   29         | • DOUBLE

    CHAR    shift, and go to state 1
    DOUBLE  shift, and go to state 2
    INT     shift, and go to state 3
    SHORT   shift, and go to state 4
    VOID    shift, and go to state 5

    $default  reduce using rule 2 (FunctionsAndDeclarations)

    FunctionsAndDeclarations  go to state 13
    FunctionDefinition        go to state 8
    FunctionDeclaration       go to state 9
    Declaration               go to state 10
    TypeSpec                  go to state 11


State 9

    2 FunctionsAndDeclarations: • FunctionDefinition
    3                         | • FunctionDeclaration
    3                         | FunctionDeclaration •  [$end]
    4                         | • Declaration
    5                         | • FunctionDefinition FunctionsAndDeclarations
    6                         | • FunctionDeclaration FunctionsAndDeclarations
    6                         | FunctionDeclaration • FunctionsAndDeclarations
    7                         | • Declaration FunctionsAndDeclarations
    8 FunctionDefinition: • TypeSpec FunctionDeclarator FunctionBody
   15 FunctionDeclaration: • TypeSpec FunctionDeclarator SEMI
   21 Declaration: • TypeSpec Declarator SEMI
   22            | • TypeSpec Declarator Declarations SEMI
   25 TypeSpec: • CHAR
   26         | • INT
   27         | • VOID
   28         | • SHORT
   29         | • DOUBLE

    CHAR    shift, and go to state 1
    DOUBLE  shift, and go to state 2
    INT     shift, and go to state 3
    SHORT   shift, and go to state 4
    VOID    shift, and go to state 5

    $default  reduce using rule 3 (FunctionsAndDeclarations)

    FunctionsAndDeclarations  go to state 14
    FunctionDefinition        go to state 8
    FunctionDeclaration       go to state 9
    Declaration               go to state 10
    TypeSpec                  go to state 11


State 10

    2 FunctionsAndDeclarations: • FunctionDefinition
    3                         | • FunctionDeclaration
    4                         | • Declaration
    4                         | Declaration •  [$end]
    5                         | • FunctionDefinition FunctionsAndDeclarations
    6                         | • FunctionDeclaration FunctionsAndDeclarations
    7                         | • Declaration FunctionsAndDeclarations
    7                         | Declaration • FunctionsAndDeclarations
    8 FunctionDefinition: • TypeSpec FunctionDeclarator FunctionBody
   15 FunctionDeclaration: • TypeSpec FunctionDeclarator SEMI
   21 Declaration: • TypeSpec Declarator SEMI
   22            | • TypeSpec Declarator Declarations SEMI
   25 TypeSpec: • CHAR
   26         | • INT
   27         | • VOID
   28         | • SHORT
   29         | • DOUBLE

    CHAR    shift, and go to state 1
    DOUBLE  shift, and go to state 2
    INT     shift, and go to state 3
    SHORT   shift, and go to state 4
    VOID    shift, and go to state 5

    $default  reduce using rule 4 (FunctionsAndDeclarations)

    FunctionsAndDeclarations  go to state 15
    FunctionDefinition        go to state 8
    FunctionDeclaration       go to state 9
    Declaration               go to state 10
    TypeSpec                  go to state 11


State 11

    8 FunctionDefinition: TypeSpec • FunctionDeclarator FunctionBody
   15 FunctionDeclaration: TypeSpec • FunctionDeclarator SEMI
   16 FunctionDeclarator: • IDENTIFIER LPAR ParameterList RPAR
   21 Declaration: TypeSpec • Declarator SEMI
   22            | TypeSpec • Declarator Declarations SEMI
   30 Declarator: • error SEMI
   31           | • IDENTIFIER
   32           | • IDENTIFIER ASSIGN Expr

    error       shift, and go to state 16
    IDENTIFIER  shift, and go to state 17

    FunctionDeclarator  go to state 18
    Declarator          go to state 19


State 12

    0 $accept: program $end •

    $default  accept


State 13

    5 FunctionsAndDeclarations: FunctionDefinition FunctionsAndDeclarations •

    $default  reduce using rule 5 (FunctionsAndDeclarations)


State 14

    6 FunctionsAndDeclarations: FunctionDeclaration FunctionsAndDeclarations •

    $default  reduce using rule 6 (FunctionsAndDeclarations)


State 15

    7 FunctionsAndDeclarations: Declaration FunctionsAndDeclarations •

    $default  reduce using rule 7 (FunctionsAndDeclarations)


State 16

   30 Declarator: error • SEMI

    SEMI  shift, and go to state 20


State 17

   16 FunctionDeclarator: IDENTIFIER • LPAR ParameterList RPAR
   31 Declarator: IDENTIFIER •  [COMMA, SEMI]
   32           | IDENTIFIER • ASSIGN Expr

    ASSIGN  shift, and go to state 21
    LPAR    shift, and go to state 22

    $default  reduce using rule 31 (Declarator)


State 18

    8 FunctionDefinition: TypeSpec FunctionDeclarator • FunctionBody
    9 FunctionBody: • LBRACE DeclarationsAndStatements RBRACE
   10             | • LBRACE RBRACE
   15 FunctionDeclaration: TypeSpec FunctionDeclarator • SEMI

    LBRACE  shift, and go to state 23
    SEMI    shift, and go to state 24

    FunctionBody  go to state 25


State 19

   21 Declaration: TypeSpec Declarator • SEMI
   22            | TypeSpec Declarator • Declarations SEMI
   23 Declarations: • COMMA Declarator
   24             | • Declarations COMMA Declarator

    COMMA  shift, and go to state 26
    SEMI   shift, and go to state 27

    Declarations  go to state 28


State 20

   30 Declarator: error SEMI •

    $default  reduce using rule 30 (Declarator)


State 21

   32 Declarator: IDENTIFIER ASSIGN • Expr
   46 Expr: • IDENTIFIER LPAR error RPAR
   47     | • LPAR error RPAR
   48     | • IDENTIFIER
   49     | • NATURAL
   50     | • CHRLIT
   51     | • DECIMAL
   52     | • LPAR Expr RPAR
   53     | • Expr ASSIGN Expr
   54     | • Expr COMMA Expr
   55     | • Expr PLUS Expr
   56     | • Expr MINUS Expr
   57     | • Expr MUL Expr
   58     | • Expr DIV Expr
   59     | • Expr MOD Expr
   60     | • Expr OR Expr
   61     | • Expr AND Expr
   62     | • Expr BITWISEOR Expr
   63     | • Expr BITWISEXOR Expr
   64     | • Expr BITWISEAND Expr
   65     | • Expr EQ Expr
   66     | • Expr NE Expr
   67     | • Expr LE Expr
   68     | • Expr GE Expr
   69     | • Expr LT Expr
   70     | • Expr GT Expr
   71     | • MINUS Expr
   72     | • PLUS Expr
   73     | • NOT Expr
   74     | • IDENTIFIER LPAR RPAR
   75     | • IDENTIFIER LPAR ExprList RPAR

    LPAR        shift, and go to state 29
    MINUS       shift, and go to state 30
    NOT         shift, and go to state 31
    PLUS        shift, and go to state 32
    IDENTIFIER  shift, and go to state 33
    NATURAL     shift, and go to state 34
    DECIMAL     shift, and go to state 35
    CHRLIT      shift, and go to state 36

    Expr  go to state 37


State 22

   16 FunctionDeclarator: IDENTIFIER LPAR • ParameterList RPAR
   17 ParameterList: • ParameterDeclaration
   18              | • ParameterDeclaration COMMA ParameterList
   19 ParameterDeclaration: • TypeSpec IDENTIFIER
   20                     | • TypeSpec
   25 TypeSpec: • CHAR
   26         | • INT
   27         | • VOID
   28         | • SHORT
   29         | • DOUBLE

    CHAR    shift, and go to state 1
    DOUBLE  shift, and go to state 2
    INT     shift, and go to state 3
    SHORT   shift, and go to state 4
    VOID    shift, and go to state 5

    ParameterList         go to state 38
    ParameterDeclaration  go to state 39
    TypeSpec              go to state 40


State 23

    9 FunctionBody: LBRACE • DeclarationsAndStatements RBRACE
   10             | LBRACE • RBRACE
   11 DeclarationsAndStatements: • Statement DeclarationsAndStatements
   12                          | • Declaration DeclarationsAndStatements
   13                          | • Statement
   14                          | • Declaration
   21 Declaration: • TypeSpec Declarator SEMI
   22            | • TypeSpec Declarator Declarations SEMI
   25 TypeSpec: • CHAR
   26         | • INT
   27         | • VOID
   28         | • SHORT
   29         | • DOUBLE
   33 Statement: • LBRACE error RBRACE
   34          | • error SEMI
   35          | • SEMI
   36          | • Expr SEMI
   37          | • LBRACE RBRACE
   38          | • LBRACE Statements RBRACE
   39          | • IF LPAR Expr RPAR Statement
   40          | • IF LPAR Expr RPAR Statement ELSE Statement
   41          | • WHILE LPAR Expr RPAR Statement
   42          | • RETURN SEMI
   43          | • RETURN Expr SEMI
   46 Expr: • IDENTIFIER LPAR error RPAR
   47     | • LPAR error RPAR
   48     | • IDENTIFIER
   49     | • NATURAL
   50     | • CHRLIT
   51     | • DECIMAL
   52     | • LPAR Expr RPAR
   53     | • Expr ASSIGN Expr
   54     | • Expr COMMA Expr
   55     | • Expr PLUS Expr
   56     | • Expr MINUS Expr
   57     | • Expr MUL Expr
   58     | • Expr DIV Expr
   59     | • Expr MOD Expr
   60     | • Expr OR Expr
   61     | • Expr AND Expr
   62     | • Expr BITWISEOR Expr
   63     | • Expr BITWISEXOR Expr
   64     | • Expr BITWISEAND Expr
   65     | • Expr EQ Expr
   66     | • Expr NE Expr
   67     | • Expr LE Expr
   68     | • Expr GE Expr
   69     | • Expr LT Expr
   70     | • Expr GT Expr
   71     | • MINUS Expr
   72     | • PLUS Expr
   73     | • NOT Expr
   74     | • IDENTIFIER LPAR RPAR
   75     | • IDENTIFIER LPAR ExprList RPAR

    error       shift, and go to state 41
    CHAR        shift, and go to state 1
    DOUBLE      shift, and go to state 2
    INT         shift, and go to state 3
    SHORT       shift, and go to state 4
    WHILE       shift, and go to state 42
    IF          shift, and go to state 43
    RETURN      shift, and go to state 44
    VOID        shift, and go to state 5
    LBRACE      shift, and go to state 45
    LPAR        shift, and go to state 29
    MINUS       shift, and go to state 30
    NOT         shift, and go to state 31
    PLUS        shift, and go to state 32
    RBRACE      shift, and go to state 46
    SEMI        shift, and go to state 47
    IDENTIFIER  shift, and go to state 33
    NATURAL     shift, and go to state 34
    DECIMAL     shift, and go to state 35
    CHRLIT      shift, and go to state 36

    DeclarationsAndStatements  go to state 48
    Declaration                go to state 49
    TypeSpec                   go to state 50
    Statement                  go to state 51
    Expr                       go to state 52


State 24

   15 FunctionDeclaration: TypeSpec FunctionDeclarator SEMI •

    $default  reduce using rule 15 (FunctionDeclaration)


State 25

    8 FunctionDefinition: TypeSpec FunctionDeclarator FunctionBody •

    $default  reduce using rule 8 (FunctionDefinition)


State 26

   23 Declarations: COMMA • Declarator
   30 Declarator: • error SEMI
   31           | • IDENTIFIER
   32           | • IDENTIFIER ASSIGN Expr

    error       shift, and go to state 16
    IDENTIFIER  shift, and go to state 53

    Declarator  go to state 54


State 27

   21 Declaration: TypeSpec Declarator SEMI •

    $default  reduce using rule 21 (Declaration)


State 28

   22 Declaration: TypeSpec Declarator Declarations • SEMI
   24 Declarations: Declarations • COMMA Declarator

    COMMA  shift, and go to state 55
    SEMI   shift, and go to state 56


State 29

   46 Expr: • IDENTIFIER LPAR error RPAR
   47     | • LPAR error RPAR
   47     | LPAR • error RPAR
   48     | • IDENTIFIER
   49     | • NATURAL
   50     | • CHRLIT
   51     | • DECIMAL
   52     | • LPAR Expr RPAR
   52     | LPAR • Expr RPAR
   53     | • Expr ASSIGN Expr
   54     | • Expr COMMA Expr
   55     | • Expr PLUS Expr
   56     | • Expr MINUS Expr
   57     | • Expr MUL Expr
   58     | • Expr DIV Expr
   59     | • Expr MOD Expr
   60     | • Expr OR Expr
   61     | • Expr AND Expr
   62     | • Expr BITWISEOR Expr
   63     | • Expr BITWISEXOR Expr
   64     | • Expr BITWISEAND Expr
   65     | • Expr EQ Expr
   66     | • Expr NE Expr
   67     | • Expr LE Expr
   68     | • Expr GE Expr
   69     | • Expr LT Expr
   70     | • Expr GT Expr
   71     | • MINUS Expr
   72     | • PLUS Expr
   73     | • NOT Expr
   74     | • IDENTIFIER LPAR RPAR
   75     | • IDENTIFIER LPAR ExprList RPAR

    error       shift, and go to state 57
    LPAR        shift, and go to state 29
    MINUS       shift, and go to state 30
    NOT         shift, and go to state 31
    PLUS        shift, and go to state 32
    IDENTIFIER  shift, and go to state 33
    NATURAL     shift, and go to state 34
    DECIMAL     shift, and go to state 35
    CHRLIT      shift, and go to state 36

    Expr  go to state 58


State 30

   46 Expr: • IDENTIFIER LPAR error RPAR
   47     | • LPAR error RPAR
   48     | • IDENTIFIER
   49     | • NATURAL
   50     | • CHRLIT
   51     | • DECIMAL
   52     | • LPAR Expr RPAR
   53     | • Expr ASSIGN Expr
   54     | • Expr COMMA Expr
   55     | • Expr PLUS Expr
   56     | • Expr MINUS Expr
   57     | • Expr MUL Expr
   58     | • Expr DIV Expr
   59     | • Expr MOD Expr
   60     | • Expr OR Expr
   61     | • Expr AND Expr
   62     | • Expr BITWISEOR Expr
   63     | • Expr BITWISEXOR Expr
   64     | • Expr BITWISEAND Expr
   65     | • Expr EQ Expr
   66     | • Expr NE Expr
   67     | • Expr LE Expr
   68     | • Expr GE Expr
   69     | • Expr LT Expr
   70     | • Expr GT Expr
   71     | • MINUS Expr
   71     | MINUS • Expr
   72     | • PLUS Expr
   73     | • NOT Expr
   74     | • IDENTIFIER LPAR RPAR
   75     | • IDENTIFIER LPAR ExprList RPAR

    LPAR        shift, and go to state 29
    MINUS       shift, and go to state 30
    NOT         shift, and go to state 31
    PLUS        shift, and go to state 32
    IDENTIFIER  shift, and go to state 33
    NATURAL     shift, and go to state 34
    DECIMAL     shift, and go to state 35
    CHRLIT      shift, and go to state 36

    Expr  go to state 59


State 31

   46 Expr: • IDENTIFIER LPAR error RPAR
   47     | • LPAR error RPAR
   48     | • IDENTIFIER
   49     | • NATURAL
   50     | • CHRLIT
   51     | • DECIMAL
   52     | • LPAR Expr RPAR
   53     | • Expr ASSIGN Expr
   54     | • Expr COMMA Expr
   55     | • Expr PLUS Expr
   56     | • Expr MINUS Expr
   57     | • Expr MUL Expr
   58     | • Expr DIV Expr
   59     | • Expr MOD Expr
   60     | • Expr OR Expr
   61     | • Expr AND Expr
   62     | • Expr BITWISEOR Expr
   63     | • Expr BITWISEXOR Expr
   64     | • Expr BITWISEAND Expr
   65     | • Expr EQ Expr
   66     | • Expr NE Expr
   67     | • Expr LE Expr
   68     | • Expr GE Expr
   69     | • Expr LT Expr
   70     | • Expr GT Expr
   71     | • MINUS Expr
   72     | • PLUS Expr
   73     | • NOT Expr
   73     | NOT • Expr
   74     | • IDENTIFIER LPAR RPAR
   75     | • IDENTIFIER LPAR ExprList RPAR

    LPAR        shift, and go to state 29
    MINUS       shift, and go to state 30
    NOT         shift, and go to state 31
    PLUS        shift, and go to state 32
    IDENTIFIER  shift, and go to state 33
    NATURAL     shift, and go to state 34
    DECIMAL     shift, and go to state 35
    CHRLIT      shift, and go to state 36

    Expr  go to state 60


State 32

   46 Expr: • IDENTIFIER LPAR error RPAR
   47     | • LPAR error RPAR
   48     | • IDENTIFIER
   49     | • NATURAL
   50     | • CHRLIT
   51     | • DECIMAL
   52     | • LPAR Expr RPAR
   53     | • Expr ASSIGN Expr
   54     | • Expr COMMA Expr
   55     | • Expr PLUS Expr
   56     | • Expr MINUS Expr
   57     | • Expr MUL Expr
   58     | • Expr DIV Expr
   59     | • Expr MOD Expr
   60     | • Expr OR Expr
   61     | • Expr AND Expr
   62     | • Expr BITWISEOR Expr
   63     | • Expr BITWISEXOR Expr
   64     | • Expr BITWISEAND Expr
   65     | • Expr EQ Expr
   66     | • Expr NE Expr
   67     | • Expr LE Expr
   68     | • Expr GE Expr
   69     | • Expr LT Expr
   70     | • Expr GT Expr
   71     | • MINUS Expr
   72     | • PLUS Expr
   72     | PLUS • Expr
   73     | • NOT Expr
   74     | • IDENTIFIER LPAR RPAR
   75     | • IDENTIFIER LPAR ExprList RPAR

    LPAR        shift, and go to state 29
    MINUS       shift, and go to state 30
    NOT         shift, and go to state 31
    PLUS        shift, and go to state 32
    IDENTIFIER  shift, and go to state 33
    NATURAL     shift, and go to state 34
    DECIMAL     shift, and go to state 35
    CHRLIT      shift, and go to state 36

    Expr  go to state 61


State 33

   46 Expr: IDENTIFIER • LPAR error RPAR
   48     | IDENTIFIER •  [BITWISEAND, BITWISEOR, BITWISEXOR, AND, ASSIGN, MUL, COMMA, DIV, EQ, GE, GT, LE, LT, MINUS, MOD, NE, OR, PLUS, RPAR, SEMI]
   74     | IDENTIFIER • LPAR RPAR
   75     | IDENTIFIER • LPAR ExprList RPAR

    LPAR  shift, and go to state 62

    $default  reduce using rule 48 (Expr)


State 34

   49 Expr: NATURAL •

    $default  reduce using rule 49 (Expr)


State 35

   51 Expr: DECIMAL •

    $default  reduce using rule 51 (Expr)


State 36

   50 Expr: CHRLIT •

    $default  reduce using rule 50 (Expr)


State 37

   32 Declarator: IDENTIFIER ASSIGN Expr •  [COMMA, SEMI]
   53 Expr: Expr • ASSIGN Expr
   54     | Expr • COMMA Expr
   55     | Expr • PLUS Expr
   56     | Expr • MINUS Expr
   57     | Expr • MUL Expr
   58     | Expr • DIV Expr
   59     | Expr • MOD Expr
   60     | Expr • OR Expr
   61     | Expr • AND Expr
   62     | Expr • BITWISEOR Expr
   63     | Expr • BITWISEXOR Expr
   64     | Expr • BITWISEAND Expr
   65     | Expr • EQ Expr
   66     | Expr • NE Expr
   67     | Expr • LE Expr
   68     | Expr • GE Expr
   69     | Expr • LT Expr
   70     | Expr • GT Expr

    BITWISEAND  shift, and go to state 63
    BITWISEOR   shift, and go to state 64
    BITWISEXOR  shift, and go to state 65
    AND         shift, and go to state 66
    ASSIGN      shift, and go to state 67
    MUL         shift, and go to state 68
    DIV         shift, and go to state 70
    EQ          shift, and go to state 71
    GE          shift, and go to state 72
    GT          shift, and go to state 73
    LE          shift, and go to state 74
    LT          shift, and go to state 75
    MINUS       shift, and go to state 76
    MOD         shift, and go to state 77
    NE          shift, and go to state 78
    OR          shift, and go to state 79
    PLUS        shift, and go to state 80

    $default  reduce using rule 32 (Declarator)

    Conflict between rule 32 and token COMMA resolved as reduce (COMMA < ASSIGN).


State 38

   16 FunctionDeclarator: IDENTIFIER LPAR ParameterList • RPAR

    RPAR  shift, and go to state 81


State 39

   17 ParameterList: ParameterDeclaration •  [RPAR]
   18              | ParameterDeclaration • COMMA ParameterList

    COMMA  shift, and go to state 82

    $default  reduce using rule 17 (ParameterList)


State 40

   19 ParameterDeclaration: TypeSpec • IDENTIFIER
   20                     | TypeSpec •  [COMMA, RPAR]

    IDENTIFIER  shift, and go to state 83

    $default  reduce using rule 20 (ParameterDeclaration)


State 41

   34 Statement: error • SEMI

    SEMI  shift, and go to state 84


State 42

   41 Statement: WHILE • LPAR Expr RPAR Statement

    LPAR  shift, and go to state 85


State 43

   39 Statement: IF • LPAR Expr RPAR Statement
   40          | IF • LPAR Expr RPAR Statement ELSE Statement

    LPAR  shift, and go to state 86


State 44

   42 Statement: RETURN • SEMI
   43          | RETURN • Expr SEMI
   46 Expr: • IDENTIFIER LPAR error RPAR
   47     | • LPAR error RPAR
   48     | • IDENTIFIER
   49     | • NATURAL
   50     | • CHRLIT
   51     | • DECIMAL
   52     | • LPAR Expr RPAR
   53     | • Expr ASSIGN Expr
   54     | • Expr COMMA Expr
   55     | • Expr PLUS Expr
   56     | • Expr MINUS Expr
   57     | • Expr MUL Expr
   58     | • Expr DIV Expr
   59     | • Expr MOD Expr
   60     | • Expr OR Expr
   61     | • Expr AND Expr
   62     | • Expr BITWISEOR Expr
   63     | • Expr BITWISEXOR Expr
   64     | • Expr BITWISEAND Expr
   65     | • Expr EQ Expr
   66     | • Expr NE Expr
   67     | • Expr LE Expr
   68     | • Expr GE Expr
   69     | • Expr LT Expr
   70     | • Expr GT Expr
   71     | • MINUS Expr
   72     | • PLUS Expr
   73     | • NOT Expr
   74     | • IDENTIFIER LPAR RPAR
   75     | • IDENTIFIER LPAR ExprList RPAR

    LPAR        shift, and go to state 29
    MINUS       shift, and go to state 30
    NOT         shift, and go to state 31
    PLUS        shift, and go to state 32
    SEMI        shift, and go to state 87
    IDENTIFIER  shift, and go to state 33
    NATURAL     shift, and go to state 34
    DECIMAL     shift, and go to state 35
    CHRLIT      shift, and go to state 36

    Expr  go to state 88


State 45

   33 Statement: • LBRACE error RBRACE
   33          | LBRACE • error RBRACE
   34          | • error SEMI
   35          | • SEMI
   36          | • Expr SEMI
   37          | • LBRACE RBRACE
   37          | LBRACE • RBRACE
   38          | • LBRACE Statements RBRACE
   38          | LBRACE • Statements RBRACE
   39          | • IF LPAR Expr RPAR Statement
   40          | • IF LPAR Expr RPAR Statement ELSE Statement
   41          | • WHILE LPAR Expr RPAR Statement
   42          | • RETURN SEMI
   43          | • RETURN Expr SEMI
   44 Statements: • Statement
   45           | • Statements Statement
   46 Expr: • IDENTIFIER LPAR error RPAR
   47     | • LPAR error RPAR
   48     | • IDENTIFIER
   49     | • NATURAL
   50     | • CHRLIT
   51     | • DECIMAL
   52     | • LPAR Expr RPAR
   53     | • Expr ASSIGN Expr
   54     | • Expr COMMA Expr
   55     | • Expr PLUS Expr
   56     | • Expr MINUS Expr
   57     | • Expr MUL Expr
   58     | • Expr DIV Expr
   59     | • Expr MOD Expr
   60     | • Expr OR Expr
   61     | • Expr AND Expr
   62     | • Expr BITWISEOR Expr
   63     | • Expr BITWISEXOR Expr
   64     | • Expr BITWISEAND Expr
   65     | • Expr EQ Expr
   66     | • Expr NE Expr
   67     | • Expr LE Expr
   68     | • Expr GE Expr
   69     | • Expr LT Expr
   70     | • Expr GT Expr
   71     | • MINUS Expr
   72     | • PLUS Expr
   73     | • NOT Expr
   74     | • IDENTIFIER LPAR RPAR
   75     | • IDENTIFIER LPAR ExprList RPAR

    error       shift, and go to state 89
    WHILE       shift, and go to state 42
    IF          shift, and go to state 43
    RETURN      shift, and go to state 44
    LBRACE      shift, and go to state 45
    LPAR        shift, and go to state 29
    MINUS       shift, and go to state 30
    NOT         shift, and go to state 31
    PLUS        shift, and go to state 32
    RBRACE      shift, and go to state 90
    SEMI        shift, and go to state 47
    IDENTIFIER  shift, and go to state 33
    NATURAL     shift, and go to state 34
    DECIMAL     shift, and go to state 35
    CHRLIT      shift, and go to state 36

    Statement   go to state 91
    Statements  go to state 92
    Expr        go to state 52


State 46

   10 FunctionBody: LBRACE RBRACE •

    $default  reduce using rule 10 (FunctionBody)


State 47

   35 Statement: SEMI •

    $default  reduce using rule 35 (Statement)


State 48

    9 FunctionBody: LBRACE DeclarationsAndStatements • RBRACE

    RBRACE  shift, and go to state 93


State 49

   11 DeclarationsAndStatements: • Statement DeclarationsAndStatements
   12                          | • Declaration DeclarationsAndStatements
   12                          | Declaration • DeclarationsAndStatements
   13                          | • Statement
   14                          | • Declaration
   14                          | Declaration •  [RBRACE]
   21 Declaration: • TypeSpec Declarator SEMI
   22            | • TypeSpec Declarator Declarations SEMI
   25 TypeSpec: • CHAR
   26         | • INT
   27         | • VOID
   28         | • SHORT
   29         | • DOUBLE
   33 Statement: • LBRACE error RBRACE
   34          | • error SEMI
   35          | • SEMI
   36          | • Expr SEMI
   37          | • LBRACE RBRACE
   38          | • LBRACE Statements RBRACE
   39          | • IF LPAR Expr RPAR Statement
   40          | • IF LPAR Expr RPAR Statement ELSE Statement
   41          | • WHILE LPAR Expr RPAR Statement
   42          | • RETURN SEMI
   43          | • RETURN Expr SEMI
   46 Expr: • IDENTIFIER LPAR error RPAR
   47     | • LPAR error RPAR
   48     | • IDENTIFIER
   49     | • NATURAL
   50     | • CHRLIT
   51     | • DECIMAL
   52     | • LPAR Expr RPAR
   53     | • Expr ASSIGN Expr
   54     | • Expr COMMA Expr
   55     | • Expr PLUS Expr
   56     | • Expr MINUS Expr
   57     | • Expr MUL Expr
   58     | • Expr DIV Expr
   59     | • Expr MOD Expr
   60     | • Expr OR Expr
   61     | • Expr AND Expr
   62     | • Expr BITWISEOR Expr
   63     | • Expr BITWISEXOR Expr
   64     | • Expr BITWISEAND Expr
   65     | • Expr EQ Expr
   66     | • Expr NE Expr
   67     | • Expr LE Expr
   68     | • Expr GE Expr
   69     | • Expr LT Expr
   70     | • Expr GT Expr
   71     | • MINUS Expr
   72     | • PLUS Expr
   73     | • NOT Expr
   74     | • IDENTIFIER LPAR RPAR
   75     | • IDENTIFIER LPAR ExprList RPAR

    error       shift, and go to state 41
    CHAR        shift, and go to state 1
    DOUBLE      shift, and go to state 2
    INT         shift, and go to state 3
    SHORT       shift, and go to state 4
    WHILE       shift, and go to state 42
    IF          shift, and go to state 43
    RETURN      shift, and go to state 44
    VOID        shift, and go to state 5
    LBRACE      shift, and go to state 45
    LPAR        shift, and go to state 29
    MINUS       shift, and go to state 30
    NOT         shift, and go to state 31
    PLUS        shift, and go to state 32
    SEMI        shift, and go to state 47
    IDENTIFIER  shift, and go to state 33
    NATURAL     shift, and go to state 34
    DECIMAL     shift, and go to state 35
    CHRLIT      shift, and go to state 36

    RBRACE  reduce using rule 14 (DeclarationsAndStatements)

    DeclarationsAndStatements  go to state 94
    Declaration                go to state 49
    TypeSpec                   go to state 50
    Statement                  go to state 51
    Expr                       go to state 52


State 50

   21 Declaration: TypeSpec • Declarator SEMI
   22            | TypeSpec • Declarator Declarations SEMI
   30 Declarator: • error SEMI
   31           | • IDENTIFIER
   32           | • IDENTIFIER ASSIGN Expr

    error       shift, and go to state 16
    IDENTIFIER  shift, and go to state 53

    Declarator  go to state 19


State 51

   11 DeclarationsAndStatements: • Statement DeclarationsAndStatements
   11                          | Statement • DeclarationsAndStatements
   12                          | • Declaration DeclarationsAndStatements
   13                          | • Statement
   13                          | Statement •  [RBRACE]
   14                          | • Declaration
   21 Declaration: • TypeSpec Declarator SEMI
   22            | • TypeSpec Declarator Declarations SEMI
   25 TypeSpec: • CHAR
   26         | • INT
   27         | • VOID
   28         | • SHORT
   29         | • DOUBLE
   33 Statement: • LBRACE error RBRACE
   34          | • error SEMI
   35          | • SEMI
   36          | • Expr SEMI
   37          | • LBRACE RBRACE
   38          | • LBRACE Statements RBRACE
   39          | • IF LPAR Expr RPAR Statement
   40          | • IF LPAR Expr RPAR Statement ELSE Statement
   41          | • WHILE LPAR Expr RPAR Statement
   42          | • RETURN SEMI
   43          | • RETURN Expr SEMI
   46 Expr: • IDENTIFIER LPAR error RPAR
   47     | • LPAR error RPAR
   48     | • IDENTIFIER
   49     | • NATURAL
   50     | • CHRLIT
   51     | • DECIMAL
   52     | • LPAR Expr RPAR
   53     | • Expr ASSIGN Expr
   54     | • Expr COMMA Expr
   55     | • Expr PLUS Expr
   56     | • Expr MINUS Expr
   57     | • Expr MUL Expr
   58     | • Expr DIV Expr
   59     | • Expr MOD Expr
   60     | • Expr OR Expr
   61     | • Expr AND Expr
   62     | • Expr BITWISEOR Expr
   63     | • Expr BITWISEXOR Expr
   64     | • Expr BITWISEAND Expr
   65     | • Expr EQ Expr
   66     | • Expr NE Expr
   67     | • Expr LE Expr
   68     | • Expr GE Expr
   69     | • Expr LT Expr
   70     | • Expr GT Expr
   71     | • MINUS Expr
   72     | • PLUS Expr
   73     | • NOT Expr
   74     | • IDENTIFIER LPAR RPAR
   75     | • IDENTIFIER LPAR ExprList RPAR

    error       shift, and go to state 41
    CHAR        shift, and go to state 1
    DOUBLE      shift, and go to state 2
    INT         shift, and go to state 3
    SHORT       shift, and go to state 4
    WHILE       shift, and go to state 42
    IF          shift, and go to state 43
    RETURN      shift, and go to state 44
    VOID        shift, and go to state 5
    LBRACE      shift, and go to state 45
    LPAR        shift, and go to state 29
    MINUS       shift, and go to state 30
    NOT         shift, and go to state 31
    PLUS        shift, and go to state 32
    SEMI        shift, and go to state 47
    IDENTIFIER  shift, and go to state 33
    NATURAL     shift, and go to state 34
    DECIMAL     shift, and go to state 35
    CHRLIT      shift, and go to state 36

    RBRACE  reduce using rule 13 (DeclarationsAndStatements)

    DeclarationsAndStatements  go to state 95
    Declaration                go to state 49
    TypeSpec                   go to state 50
    Statement                  go to state 51
    Expr                       go to state 52


State 52

   36 Statement: Expr • SEMI
   53 Expr: Expr • ASSIGN Expr
   54     | Expr • COMMA Expr
   55     | Expr • PLUS Expr
   56     | Expr • MINUS Expr
   57     | Expr • MUL Expr
   58     | Expr • DIV Expr
   59     | Expr • MOD Expr
   60     | Expr • OR Expr
   61     | Expr • AND Expr
   62     | Expr • BITWISEOR Expr
   63     | Expr • BITWISEXOR Expr
   64     | Expr • BITWISEAND Expr
   65     | Expr • EQ Expr
   66     | Expr • NE Expr
   67     | Expr • LE Expr
   68     | Expr • GE Expr
   69     | Expr • LT Expr
   70     | Expr • GT Expr

    BITWISEAND  shift, and go to state 63
    BITWISEOR   shift, and go to state 64
    BITWISEXOR  shift, and go to state 65
    AND         shift, and go to state 66
    ASSIGN      shift, and go to state 67
    MUL         shift, and go to state 68
    COMMA       shift, and go to state 69
    DIV         shift, and go to state 70
    EQ          shift, and go to state 71
    GE          shift, and go to state 72
    GT          shift, and go to state 73
    LE          shift, and go to state 74
    LT          shift, and go to state 75
    MINUS       shift, and go to state 76
    MOD         shift, and go to state 77
    NE          shift, and go to state 78
    OR          shift, and go to state 79
    PLUS        shift, and go to state 80
    SEMI        shift, and go to state 96


State 53

   31 Declarator: IDENTIFIER •  [COMMA, SEMI]
   32           | IDENTIFIER • ASSIGN Expr

    ASSIGN  shift, and go to state 21

    $default  reduce using rule 31 (Declarator)


State 54

   23 Declarations: COMMA Declarator •

    $default  reduce using rule 23 (Declarations)


State 55

   24 Declarations: Declarations COMMA • Declarator
   30 Declarator: • error SEMI
   31           | • IDENTIFIER
   32           | • IDENTIFIER ASSIGN Expr

    error       shift, and go to state 16
    IDENTIFIER  shift, and go to state 53

    Declarator  go to state 97


State 56

   22 Declaration: TypeSpec Declarator Declarations SEMI •

    $default  reduce using rule 22 (Declaration)


State 57

   47 Expr: LPAR error • RPAR

    RPAR  shift, and go to state 98


State 58

   52 Expr: LPAR Expr • RPAR
   53     | Expr • ASSIGN Expr
   54     | Expr • COMMA Expr
   55     | Expr • PLUS Expr
   56     | Expr • MINUS Expr
   57     | Expr • MUL Expr
   58     | Expr • DIV Expr
   59     | Expr • MOD Expr
   60     | Expr • OR Expr
   61     | Expr • AND Expr
   62     | Expr • BITWISEOR Expr
   63     | Expr • BITWISEXOR Expr
   64     | Expr • BITWISEAND Expr
   65     | Expr • EQ Expr
   66     | Expr • NE Expr
   67     | Expr • LE Expr
   68     | Expr • GE Expr
   69     | Expr • LT Expr
   70     | Expr • GT Expr

    BITWISEAND  shift, and go to state 63
    BITWISEOR   shift, and go to state 64
    BITWISEXOR  shift, and go to state 65
    AND         shift, and go to state 66
    ASSIGN      shift, and go to state 67
    MUL         shift, and go to state 68
    COMMA       shift, and go to state 69
    DIV         shift, and go to state 70
    EQ          shift, and go to state 71
    GE          shift, and go to state 72
    GT          shift, and go to state 73
    LE          shift, and go to state 74
    LT          shift, and go to state 75
    MINUS       shift, and go to state 76
    MOD         shift, and go to state 77
    NE          shift, and go to state 78
    OR          shift, and go to state 79
    PLUS        shift, and go to state 80
    RPAR        shift, and go to state 99


State 59

   53 Expr: Expr • ASSIGN Expr
   54     | Expr • COMMA Expr
   55     | Expr • PLUS Expr
   56     | Expr • MINUS Expr
   57     | Expr • MUL Expr
   58     | Expr • DIV Expr
   59     | Expr • MOD Expr
   60     | Expr • OR Expr
   61     | Expr • AND Expr
   62     | Expr • BITWISEOR Expr
   63     | Expr • BITWISEXOR Expr
   64     | Expr • BITWISEAND Expr
   65     | Expr • EQ Expr
   66     | Expr • NE Expr
   67     | Expr • LE Expr
   68     | Expr • GE Expr
   69     | Expr • LT Expr
   70     | Expr • GT Expr
   71     | MINUS Expr •  [BITWISEAND, BITWISEOR, BITWISEXOR, AND, ASSIGN, COMMA, EQ, GE, GT, LE, LT, MINUS, NE, OR, PLUS, RPAR, SEMI]

    MUL  shift, and go to state 68
    DIV  shift, and go to state 70
    MOD  shift, and go to state 77

    $default  reduce using rule 71 (Expr)

    Conflict between rule 71 and token BITWISEAND resolved as reduce (BITWISEAND < MINUS).
    Conflict between rule 71 and token BITWISEOR resolved as reduce (BITWISEOR < MINUS).
    Conflict between rule 71 and token BITWISEXOR resolved as reduce (BITWISEXOR < MINUS).
    Conflict between rule 71 and token AND resolved as reduce (AND < MINUS).
    Conflict between rule 71 and token ASSIGN resolved as reduce (ASSIGN < MINUS).
    Conflict between rule 71 and token MUL resolved as shift (MINUS < MUL).
    Conflict between rule 71 and token COMMA resolved as reduce (COMMA < MINUS).
    Conflict between rule 71 and token DIV resolved as shift (MINUS < DIV).
    Conflict between rule 71 and token EQ resolved as reduce (EQ < MINUS).
    Conflict between rule 71 and token GE resolved as reduce (GE < MINUS).
    Conflict between rule 71 and token GT resolved as reduce (GT < MINUS).
    Conflict between rule 71 and token LE resolved as reduce (LE < MINUS).
    Conflict between rule 71 and token LT resolved as reduce (LT < MINUS).
    Conflict between rule 71 and token MINUS resolved as reduce (%left MINUS).
    Conflict between rule 71 and token MOD resolved as shift (MINUS < MOD).
    Conflict between rule 71 and token NE resolved as reduce (NE < MINUS).
    Conflict between rule 71 and token OR resolved as reduce (OR < MINUS).
    Conflict between rule 71 and token PLUS resolved as reduce (%left PLUS).


State 60

   53 Expr: Expr • ASSIGN Expr
   54     | Expr • COMMA Expr
   55     | Expr • PLUS Expr
   56     | Expr • MINUS Expr
   57     | Expr • MUL Expr
   58     | Expr • DIV Expr
   59     | Expr • MOD Expr
   60     | Expr • OR Expr
   61     | Expr • AND Expr
   62     | Expr • BITWISEOR Expr
   63     | Expr • BITWISEXOR Expr
   64     | Expr • BITWISEAND Expr
   65     | Expr • EQ Expr
   66     | Expr • NE Expr
   67     | Expr • LE Expr
   68     | Expr • GE Expr
   69     | Expr • LT Expr
   70     | Expr • GT Expr
   73     | NOT Expr •  [BITWISEAND, BITWISEOR, BITWISEXOR, AND, ASSIGN, MUL, COMMA, DIV, EQ, GE, GT, LE, LT, MINUS, MOD, NE, OR, PLUS, RPAR, SEMI]

    $default  reduce using rule 73 (Expr)

    Conflict between rule 73 and token BITWISEAND resolved as reduce (BITWISEAND < NOT).
    Conflict between rule 73 and token BITWISEOR resolved as reduce (BITWISEOR < NOT).
    Conflict between rule 73 and token BITWISEXOR resolved as reduce (BITWISEXOR < NOT).
    Conflict between rule 73 and token AND resolved as reduce (AND < NOT).
    Conflict between rule 73 and token ASSIGN resolved as reduce (ASSIGN < NOT).
    Conflict between rule 73 and token MUL resolved as reduce (MUL < NOT).
    Conflict between rule 73 and token COMMA resolved as reduce (COMMA < NOT).
    Conflict between rule 73 and token DIV resolved as reduce (DIV < NOT).
    Conflict between rule 73 and token EQ resolved as reduce (EQ < NOT).
    Conflict between rule 73 and token GE resolved as reduce (GE < NOT).
    Conflict between rule 73 and token GT resolved as reduce (GT < NOT).
    Conflict between rule 73 and token LE resolved as reduce (LE < NOT).
    Conflict between rule 73 and token LT resolved as reduce (LT < NOT).
    Conflict between rule 73 and token MINUS resolved as reduce (MINUS < NOT).
    Conflict between rule 73 and token MOD resolved as reduce (MOD < NOT).
    Conflict between rule 73 and token NE resolved as reduce (NE < NOT).
    Conflict between rule 73 and token OR resolved as reduce (OR < NOT).
    Conflict between rule 73 and token PLUS resolved as reduce (PLUS < NOT).


State 61

   53 Expr: Expr • ASSIGN Expr
   54     | Expr • COMMA Expr
   55     | Expr • PLUS Expr
   56     | Expr • MINUS Expr
   57     | Expr • MUL Expr
   58     | Expr • DIV Expr
   59     | Expr • MOD Expr
   60     | Expr • OR Expr
   61     | Expr • AND Expr
   62     | Expr • BITWISEOR Expr
   63     | Expr • BITWISEXOR Expr
   64     | Expr • BITWISEAND Expr
   65     | Expr • EQ Expr
   66     | Expr • NE Expr
   67     | Expr • LE Expr
   68     | Expr • GE Expr
   69     | Expr • LT Expr
   70     | Expr • GT Expr
   72     | PLUS Expr •  [BITWISEAND, BITWISEOR, BITWISEXOR, AND, ASSIGN, COMMA, EQ, GE, GT, LE, LT, MINUS, NE, OR, PLUS, RPAR, SEMI]

    MUL  shift, and go to state 68
    DIV  shift, and go to state 70
    MOD  shift, and go to state 77

    $default  reduce using rule 72 (Expr)

    Conflict between rule 72 and token BITWISEAND resolved as reduce (BITWISEAND < PLUS).
    Conflict between rule 72 and token BITWISEOR resolved as reduce (BITWISEOR < PLUS).
    Conflict between rule 72 and token BITWISEXOR resolved as reduce (BITWISEXOR < PLUS).
    Conflict between rule 72 and token AND resolved as reduce (AND < PLUS).
    Conflict between rule 72 and token ASSIGN resolved as reduce (ASSIGN < PLUS).
    Conflict between rule 72 and token MUL resolved as shift (PLUS < MUL).
    Conflict between rule 72 and token COMMA resolved as reduce (COMMA < PLUS).
    Conflict between rule 72 and token DIV resolved as shift (PLUS < DIV).
    Conflict between rule 72 and token EQ resolved as reduce (EQ < PLUS).
    Conflict between rule 72 and token GE resolved as reduce (GE < PLUS).
    Conflict between rule 72 and token GT resolved as reduce (GT < PLUS).
    Conflict between rule 72 and token LE resolved as reduce (LE < PLUS).
    Conflict between rule 72 and token LT resolved as reduce (LT < PLUS).
    Conflict between rule 72 and token MINUS resolved as reduce (%left MINUS).
    Conflict between rule 72 and token MOD resolved as shift (PLUS < MOD).
    Conflict between rule 72 and token NE resolved as reduce (NE < PLUS).
    Conflict between rule 72 and token OR resolved as reduce (OR < PLUS).
    Conflict between rule 72 and token PLUS resolved as reduce (%left PLUS).


State 62

   46 Expr: IDENTIFIER LPAR • error RPAR
   74     | IDENTIFIER LPAR • RPAR
   75     | IDENTIFIER LPAR • ExprList RPAR
   76 ExprList: • COMMA Expr
   77         | • ExprList COMMA Expr

    error  shift, and go to state 100
    COMMA  shift, and go to state 101
    RPAR   shift, and go to state 102

    ExprList  go to state 103


State 63

   46 Expr: • IDENTIFIER LPAR error RPAR
   47     | • LPAR error RPAR
   48     | • IDENTIFIER
   49     | • NATURAL
   50     | • CHRLIT
   51     | • DECIMAL
   52     | • LPAR Expr RPAR
   53     | • Expr ASSIGN Expr
   54     | • Expr COMMA Expr
   55     | • Expr PLUS Expr
   56     | • Expr MINUS Expr
   57     | • Expr MUL Expr
   58     | • Expr DIV Expr
   59     | • Expr MOD Expr
   60     | • Expr OR Expr
   61     | • Expr AND Expr
   62     | • Expr BITWISEOR Expr
   63     | • Expr BITWISEXOR Expr
   64     | • Expr BITWISEAND Expr
   64     | Expr BITWISEAND • Expr
   65     | • Expr EQ Expr
   66     | • Expr NE Expr
   67     | • Expr LE Expr
   68     | • Expr GE Expr
   69     | • Expr LT Expr
   70     | • Expr GT Expr
   71     | • MINUS Expr
   72     | • PLUS Expr
   73     | • NOT Expr
   74     | • IDENTIFIER LPAR RPAR
   75     | • IDENTIFIER LPAR ExprList RPAR

    LPAR        shift, and go to state 29
    MINUS       shift, and go to state 30
    NOT         shift, and go to state 31
    PLUS        shift, and go to state 32
    IDENTIFIER  shift, and go to state 33
    NATURAL     shift, and go to state 34
    DECIMAL     shift, and go to state 35
    CHRLIT      shift, and go to state 36

    Expr  go to state 104


State 64

   46 Expr: • IDENTIFIER LPAR error RPAR
   47     | • LPAR error RPAR
   48     | • IDENTIFIER
   49     | • NATURAL
   50     | • CHRLIT
   51     | • DECIMAL
   52     | • LPAR Expr RPAR
   53     | • Expr ASSIGN Expr
   54     | • Expr COMMA Expr
   55     | • Expr PLUS Expr
   56     | • Expr MINUS Expr
   57     | • Expr MUL Expr
   58     | • Expr DIV Expr
   59     | • Expr MOD Expr
   60     | • Expr OR Expr
   61     | • Expr AND Expr
   62     | • Expr BITWISEOR Expr
   62     | Expr BITWISEOR • Expr
   63     | • Expr BITWISEXOR Expr
   64     | • Expr BITWISEAND Expr
   65     | • Expr EQ Expr
   66     | • Expr NE Expr
   67     | • Expr LE Expr
   68     | • Expr GE Expr
   69     | • Expr LT Expr
   70     | • Expr GT Expr
   71     | • MINUS Expr
   72     | • PLUS Expr
   73     | • NOT Expr
   74     | • IDENTIFIER LPAR RPAR
   75     | • IDENTIFIER LPAR ExprList RPAR

    LPAR        shift, and go to state 29
    MINUS       shift, and go to state 30
    NOT         shift, and go to state 31
    PLUS        shift, and go to state 32
    IDENTIFIER  shift, and go to state 33
    NATURAL     shift, and go to state 34
    DECIMAL     shift, and go to state 35
    CHRLIT      shift, and go to state 36

    Expr  go to state 105


State 65

   46 Expr: • IDENTIFIER LPAR error RPAR
   47     | • LPAR error RPAR
   48     | • IDENTIFIER
   49     | • NATURAL
   50     | • CHRLIT
   51     | • DECIMAL
   52     | • LPAR Expr RPAR
   53     | • Expr ASSIGN Expr
   54     | • Expr COMMA Expr
   55     | • Expr PLUS Expr
   56     | • Expr MINUS Expr
   57     | • Expr MUL Expr
   58     | • Expr DIV Expr
   59     | • Expr MOD Expr
   60     | • Expr OR Expr
   61     | • Expr AND Expr
   62     | • Expr BITWISEOR Expr
   63     | • Expr BITWISEXOR Expr
   63     | Expr BITWISEXOR • Expr
   64     | • Expr BITWISEAND Expr
   65     | • Expr EQ Expr
   66     | • Expr NE Expr
   67     | • Expr LE Expr
   68     | • Expr GE Expr
   69     | • Expr LT Expr
   70     | • Expr GT Expr
   71     | • MINUS Expr
   72     | • PLUS Expr
   73     | • NOT Expr
   74     | • IDENTIFIER LPAR RPAR
   75     | • IDENTIFIER LPAR ExprList RPAR

    LPAR        shift, and go to state 29
    MINUS       shift, and go to state 30
    NOT         shift, and go to state 31
    PLUS        shift, and go to state 32
    IDENTIFIER  shift, and go to state 33
    NATURAL     shift, and go to state 34
    DECIMAL     shift, and go to state 35
    CHRLIT      shift, and go to state 36

    Expr  go to state 106


State 66

   46 Expr: • IDENTIFIER LPAR error RPAR
   47     | • LPAR error RPAR
   48     | • IDENTIFIER
   49     | • NATURAL
   50     | • CHRLIT
   51     | • DECIMAL
   52     | • LPAR Expr RPAR
   53     | • Expr ASSIGN Expr
   54     | • Expr COMMA Expr
   55     | • Expr PLUS Expr
   56     | • Expr MINUS Expr
   57     | • Expr MUL Expr
   58     | • Expr DIV Expr
   59     | • Expr MOD Expr
   60     | • Expr OR Expr
   61     | • Expr AND Expr
   61     | Expr AND • Expr
   62     | • Expr BITWISEOR Expr
   63     | • Expr BITWISEXOR Expr
   64     | • Expr BITWISEAND Expr
   65     | • Expr EQ Expr
   66     | • Expr NE Expr
   67     | • Expr LE Expr
   68     | • Expr GE Expr
   69     | • Expr LT Expr
   70     | • Expr GT Expr
   71     | • MINUS Expr
   72     | • PLUS Expr
   73     | • NOT Expr
   74     | • IDENTIFIER LPAR RPAR
   75     | • IDENTIFIER LPAR ExprList RPAR

    LPAR        shift, and go to state 29
    MINUS       shift, and go to state 30
    NOT         shift, and go to state 31
    PLUS        shift, and go to state 32
    IDENTIFIER  shift, and go to state 33
    NATURAL     shift, and go to state 34
    DECIMAL     shift, and go to state 35
    CHRLIT      shift, and go to state 36

    Expr  go to state 107


State 67

   46 Expr: • IDENTIFIER LPAR error RPAR
   47     | • LPAR error RPAR
   48     | • IDENTIFIER
   49     | • NATURAL
   50     | • CHRLIT
   51     | • DECIMAL
   52     | • LPAR Expr RPAR
   53     | • Expr ASSIGN Expr
   53     | Expr ASSIGN • Expr
   54     | • Expr COMMA Expr
   55     | • Expr PLUS Expr
   56     | • Expr MINUS Expr
   57     | • Expr MUL Expr
   58     | • Expr DIV Expr
   59     | • Expr MOD Expr
   60     | • Expr OR Expr
   61     | • Expr AND Expr
   62     | • Expr BITWISEOR Expr
   63     | • Expr BITWISEXOR Expr
   64     | • Expr BITWISEAND Expr
   65     | • Expr EQ Expr
   66     | • Expr NE Expr
   67     | • Expr LE Expr
   68     | • Expr GE Expr
   69     | • Expr LT Expr
   70     | • Expr GT Expr
   71     | • MINUS Expr
   72     | • PLUS Expr
   73     | • NOT Expr
   74     | • IDENTIFIER LPAR RPAR
   75     | • IDENTIFIER LPAR ExprList RPAR

    LPAR        shift, and go to state 29
    MINUS       shift, and go to state 30
    NOT         shift, and go to state 31
    PLUS        shift, and go to state 32
    IDENTIFIER  shift, and go to state 33
    NATURAL     shift, and go to state 34
    DECIMAL     shift, and go to state 35
    CHRLIT      shift, and go to state 36

    Expr  go to state 108


State 68

   46 Expr: • IDENTIFIER LPAR error RPAR
   47     | • LPAR error RPAR
   48     | • IDENTIFIER
   49     | • NATURAL
   50     | • CHRLIT
   51     | • DECIMAL
   52     | • LPAR Expr RPAR
   53     | • Expr ASSIGN Expr
   54     | • Expr COMMA Expr
   55     | • Expr PLUS Expr
   56     | • Expr MINUS Expr
   57     | • Expr MUL Expr
   57     | Expr MUL • Expr
   58     | • Expr DIV Expr
   59     | • Expr MOD Expr
   60     | • Expr OR Expr
   61     | • Expr AND Expr
   62     | • Expr BITWISEOR Expr
   63     | • Expr BITWISEXOR Expr
   64     | • Expr BITWISEAND Expr
   65     | • Expr EQ Expr
   66     | • Expr NE Expr
   67     | • Expr LE Expr
   68     | • Expr GE Expr
   69     | • Expr LT Expr
   70     | • Expr GT Expr
   71     | • MINUS Expr
   72     | • PLUS Expr
   73     | • NOT Expr
   74     | • IDENTIFIER LPAR RPAR
   75     | • IDENTIFIER LPAR ExprList RPAR

    LPAR        shift, and go to state 29
    MINUS       shift, and go to state 30
    NOT         shift, and go to state 31
    PLUS        shift, and go to state 32
    IDENTIFIER  shift, and go to state 33
    NATURAL     shift, and go to state 34
    DECIMAL     shift, and go to state 35
    CHRLIT      shift, and go to state 36

    Expr  go to state 109


State 69

   46 Expr: • IDENTIFIER LPAR error RPAR
   47     | • LPAR error RPAR
   48     | • IDENTIFIER
   49     | • NATURAL
   50     | • CHRLIT
   51     | • DECIMAL
   52     | • LPAR Expr RPAR
   53     | • Expr ASSIGN Expr
   54     | • Expr COMMA Expr
   54     | Expr COMMA • Expr
   55     | • Expr PLUS Expr
   56     | • Expr MINUS Expr
   57     | • Expr MUL Expr
   58     | • Expr DIV Expr
   59     | • Expr MOD Expr
   60     | • Expr OR Expr
   61     | • Expr AND Expr
   62     | • Expr BITWISEOR Expr
   63     | • Expr BITWISEXOR Expr
   64     | • Expr BITWISEAND Expr
   65     | • Expr EQ Expr
   66     | • Expr NE Expr
   67     | • Expr LE Expr
   68     | • Expr GE Expr
   69     | • Expr LT Expr
   70     | • Expr GT Expr
   71     | • MINUS Expr
   72     | • PLUS Expr
   73     | • NOT Expr
   74     | • IDENTIFIER LPAR RPAR
   75     | • IDENTIFIER LPAR ExprList RPAR

    LPAR        shift, and go to state 29
    MINUS       shift, and go to state 30
    NOT         shift, and go to state 31
    PLUS        shift, and go to state 32
    IDENTIFIER  shift, and go to state 33
    NATURAL     shift, and go to state 34
    DECIMAL     shift, and go to state 35
    CHRLIT      shift, and go to state 36

    Expr  go to state 110


State 70

   46 Expr: • IDENTIFIER LPAR error RPAR
   47     | • LPAR error RPAR
   48     | • IDENTIFIER
   49     | • NATURAL
   50     | • CHRLIT
   51     | • DECIMAL
   52     | • LPAR Expr RPAR
   53     | • Expr ASSIGN Expr
   54     | • Expr COMMA Expr
   55     | • Expr PLUS Expr
   56     | • Expr MINUS Expr
   57     | • Expr MUL Expr
   58     | • Expr DIV Expr
   58     | Expr DIV • Expr
   59     | • Expr MOD Expr
   60     | • Expr OR Expr
   61     | • Expr AND Expr
   62     | • Expr BITWISEOR Expr
   63     | • Expr BITWISEXOR Expr
   64     | • Expr BITWISEAND Expr
   65     | • Expr EQ Expr
   66     | • Expr NE Expr
   67     | • Expr LE Expr
   68     | • Expr GE Expr
   69     | • Expr LT Expr
   70     | • Expr GT Expr
   71     | • MINUS Expr
   72     | • PLUS Expr
   73     | • NOT Expr
   74     | • IDENTIFIER LPAR RPAR
   75     | • IDENTIFIER LPAR ExprList RPAR

    LPAR        shift, and go to state 29
    MINUS       shift, and go to state 30
    NOT         shift, and go to state 31
    PLUS        shift, and go to state 32
    IDENTIFIER  shift, and go to state 33
    NATURAL     shift, and go to state 34
    DECIMAL     shift, and go to state 35
    CHRLIT      shift, and go to state 36

    Expr  go to state 111


State 71

   46 Expr: • IDENTIFIER LPAR error RPAR
   47     | • LPAR error RPAR
   48     | • IDENTIFIER
   49     | • NATURAL
   50     | • CHRLIT
   51     | • DECIMAL
   52     | • LPAR Expr RPAR
   53     | • Expr ASSIGN Expr
   54     | • Expr COMMA Expr
   55     | • Expr PLUS Expr
   56     | • Expr MINUS Expr
   57     | • Expr MUL Expr
   58     | • Expr DIV Expr
   59     | • Expr MOD Expr
   60     | • Expr OR Expr
   61     | • Expr AND Expr
   62     | • Expr BITWISEOR Expr
   63     | • Expr BITWISEXOR Expr
   64     | • Expr BITWISEAND Expr
   65     | • Expr EQ Expr
   65     | Expr EQ • Expr
   66     | • Expr NE Expr
   67     | • Expr LE Expr
   68     | • Expr GE Expr
   69     | • Expr LT Expr
   70     | • Expr GT Expr
   71     | • MINUS Expr
   72     | • PLUS Expr
   73     | • NOT Expr
   74     | • IDENTIFIER LPAR RPAR
   75     | • IDENTIFIER LPAR ExprList RPAR

    LPAR        shift, and go to state 29
    MINUS       shift, and go to state 30
    NOT         shift, and go to state 31
    PLUS        shift, and go to state 32
    IDENTIFIER  shift, and go to state 33
    NATURAL     shift, and go to state 34
    DECIMAL     shift, and go to state 35
    CHRLIT      shift, and go to state 36

    Expr  go to state 112


State 72

   46 Expr: • IDENTIFIER LPAR error RPAR
   47     | • LPAR error RPAR
   48     | • IDENTIFIER
   49     | • NATURAL
   50     | • CHRLIT
   51     | • DECIMAL
   52     | • LPAR Expr RPAR
   53     | • Expr ASSIGN Expr
   54     | • Expr COMMA Expr
   55     | • Expr PLUS Expr
   56     | • Expr MINUS Expr
   57     | • Expr MUL Expr
   58     | • Expr DIV Expr
   59     | • Expr MOD Expr
   60     | • Expr OR Expr
   61     | • Expr AND Expr
   62     | • Expr BITWISEOR Expr
   63     | • Expr BITWISEXOR Expr
   64     | • Expr BITWISEAND Expr
   65     | • Expr EQ Expr
   66     | • Expr NE Expr
   67     | • Expr LE Expr
   68     | • Expr GE Expr
   68     | Expr GE • Expr
   69     | • Expr LT Expr
   70     | • Expr GT Expr
   71     | • MINUS Expr
   72     | • PLUS Expr
   73     | • NOT Expr
   74     | • IDENTIFIER LPAR RPAR
   75     | • IDENTIFIER LPAR ExprList RPAR

    LPAR        shift, and go to state 29
    MINUS       shift, and go to state 30
    NOT         shift, and go to state 31
    PLUS        shift, and go to state 32
    IDENTIFIER  shift, and go to state 33
    NATURAL     shift, and go to state 34
    DECIMAL     shift, and go to state 35
    CHRLIT      shift, and go to state 36

    Expr  go to state 113


State 73

   46 Expr: • IDENTIFIER LPAR error RPAR
   47     | • LPAR error RPAR
   48     | • IDENTIFIER
   49     | • NATURAL
   50     | • CHRLIT
   51     | • DECIMAL
   52     | • LPAR Expr RPAR
   53     | • Expr ASSIGN Expr
   54     | • Expr COMMA Expr
   55     | • Expr PLUS Expr
   56     | • Expr MINUS Expr
   57     | • Expr MUL Expr
   58     | • Expr DIV Expr
   59     | • Expr MOD Expr
   60     | • Expr OR Expr
   61     | • Expr AND Expr
   62     | • Expr BITWISEOR Expr
   63     | • Expr BITWISEXOR Expr
   64     | • Expr BITWISEAND Expr
   65     | • Expr EQ Expr
   66     | • Expr NE Expr
   67     | • Expr LE Expr
   68     | • Expr GE Expr
   69     | • Expr LT Expr
   70     | • Expr GT Expr
   70     | Expr GT • Expr
   71     | • MINUS Expr
   72     | • PLUS Expr
   73     | • NOT Expr
   74     | • IDENTIFIER LPAR RPAR
   75     | • IDENTIFIER LPAR ExprList RPAR

    LPAR        shift, and go to state 29
    MINUS       shift, and go to state 30
    NOT         shift, and go to state 31
    PLUS        shift, and go to state 32
    IDENTIFIER  shift, and go to state 33
    NATURAL     shift, and go to state 34
    DECIMAL     shift, and go to state 35
    CHRLIT      shift, and go to state 36

    Expr  go to state 114


State 74

   46 Expr: • IDENTIFIER LPAR error RPAR
   47     | • LPAR error RPAR
   48     | • IDENTIFIER
   49     | • NATURAL
   50     | • CHRLIT
   51     | • DECIMAL
   52     | • LPAR Expr RPAR
   53     | • Expr ASSIGN Expr
   54     | • Expr COMMA Expr
   55     | • Expr PLUS Expr
   56     | • Expr MINUS Expr
   57     | • Expr MUL Expr
   58     | • Expr DIV Expr
   59     | • Expr MOD Expr
   60     | • Expr OR Expr
   61     | • Expr AND Expr
   62     | • Expr BITWISEOR Expr
   63     | • Expr BITWISEXOR Expr
   64     | • Expr BITWISEAND Expr
   65     | • Expr EQ Expr
   66     | • Expr NE Expr
   67     | • Expr LE Expr
   67     | Expr LE • Expr
   68     | • Expr GE Expr
   69     | • Expr LT Expr
   70     | • Expr GT Expr
   71     | • MINUS Expr
   72     | • PLUS Expr
   73     | • NOT Expr
   74     | • IDENTIFIER LPAR RPAR
   75     | • IDENTIFIER LPAR ExprList RPAR

    LPAR        shift, and go to state 29
    MINUS       shift, and go to state 30
    NOT         shift, and go to state 31
    PLUS        shift, and go to state 32
    IDENTIFIER  shift, and go to state 33
    NATURAL     shift, and go to state 34
    DECIMAL     shift, and go to state 35
    CHRLIT      shift, and go to state 36

    Expr  go to state 115


State 75

   46 Expr: • IDENTIFIER LPAR error RPAR
   47     | • LPAR error RPAR
   48     | • IDENTIFIER
   49     | • NATURAL
   50     | • CHRLIT
   51     | • DECIMAL
   52     | • LPAR Expr RPAR
   53     | • Expr ASSIGN Expr
   54     | • Expr COMMA Expr
   55     | • Expr PLUS Expr
   56     | • Expr MINUS Expr
   57     | • Expr MUL Expr
   58     | • Expr DIV Expr
   59     | • Expr MOD Expr
   60     | • Expr OR Expr
   61     | • Expr AND Expr
   62     | • Expr BITWISEOR Expr
   63     | • Expr BITWISEXOR Expr
   64     | • Expr BITWISEAND Expr
   65     | • Expr EQ Expr
   66     | • Expr NE Expr
   67     | • Expr LE Expr
   68     | • Expr GE Expr
   69     | • Expr LT Expr
   69     | Expr LT • Expr
   70     | • Expr GT Expr
   71     | • MINUS Expr
   72     | • PLUS Expr
   73     | • NOT Expr
   74     | • IDENTIFIER LPAR RPAR
   75     | • IDENTIFIER LPAR ExprList RPAR

    LPAR        shift, and go to state 29
    MINUS       shift, and go to state 30
    NOT         shift, and go to state 31
    PLUS        shift, and go to state 32
    IDENTIFIER  shift, and go to state 33
    NATURAL     shift, and go to state 34
    DECIMAL     shift, and go to state 35
    CHRLIT      shift, and go to state 36

    Expr  go to state 116


State 76

   46 Expr: • IDENTIFIER LPAR error RPAR
   47     | • LPAR error RPAR
   48     | • IDENTIFIER
   49     | • NATURAL
   50     | • CHRLIT
   51     | • DECIMAL
   52     | • LPAR Expr RPAR
   53     | • Expr ASSIGN Expr
   54     | • Expr COMMA Expr
   55     | • Expr PLUS Expr
   56     | • Expr MINUS Expr
   56     | Expr MINUS • Expr
   57     | • Expr MUL Expr
   58     | • Expr DIV Expr
   59     | • Expr MOD Expr
   60     | • Expr OR Expr
   61     | • Expr AND Expr
   62     | • Expr BITWISEOR Expr
   63     | • Expr BITWISEXOR Expr
   64     | • Expr BITWISEAND Expr
   65     | • Expr EQ Expr
   66     | • Expr NE Expr
   67     | • Expr LE Expr
   68     | • Expr GE Expr
   69     | • Expr LT Expr
   70     | • Expr GT Expr
   71     | • MINUS Expr
   72     | • PLUS Expr
   73     | • NOT Expr
   74     | • IDENTIFIER LPAR RPAR
   75     | • IDENTIFIER LPAR ExprList RPAR

    LPAR        shift, and go to state 29
    MINUS       shift, and go to state 30
    NOT         shift, and go to state 31
    PLUS        shift, and go to state 32
    IDENTIFIER  shift, and go to state 33
    NATURAL     shift, and go to state 34
    DECIMAL     shift, and go to state 35
    CHRLIT      shift, and go to state 36

    Expr  go to state 117


State 77

   46 Expr: • IDENTIFIER LPAR error RPAR
   47     | • LPAR error RPAR
   48     | • IDENTIFIER
   49     | • NATURAL
   50     | • CHRLIT
   51     | • DECIMAL
   52     | • LPAR Expr RPAR
   53     | • Expr ASSIGN Expr
   54     | • Expr COMMA Expr
   55     | • Expr PLUS Expr
   56     | • Expr MINUS Expr
   57     | • Expr MUL Expr
   58     | • Expr DIV Expr
   59     | • Expr MOD Expr
   59     | Expr MOD • Expr
   60     | • Expr OR Expr
   61     | • Expr AND Expr
   62     | • Expr BITWISEOR Expr
   63     | • Expr BITWISEXOR Expr
   64     | • Expr BITWISEAND Expr
   65     | • Expr EQ Expr
   66     | • Expr NE Expr
   67     | • Expr LE Expr
   68     | • Expr GE Expr
   69     | • Expr LT Expr
   70     | • Expr GT Expr
   71     | • MINUS Expr
   72     | • PLUS Expr
   73     | • NOT Expr
   74     | • IDENTIFIER LPAR RPAR
   75     | • IDENTIFIER LPAR ExprList RPAR

    LPAR        shift, and go to state 29
    MINUS       shift, and go to state 30
    NOT         shift, and go to state 31
    PLUS        shift, and go to state 32
    IDENTIFIER  shift, and go to state 33
    NATURAL     shift, and go to state 34
    DECIMAL     shift, and go to state 35
    CHRLIT      shift, and go to state 36

    Expr  go to state 118


State 78

   46 Expr: • IDENTIFIER LPAR error RPAR
   47     | • LPAR error RPAR
   48     | • IDENTIFIER
   49     | • NATURAL
   50     | • CHRLIT
   51     | • DECIMAL
   52     | • LPAR Expr RPAR
   53     | • Expr ASSIGN Expr
   54     | • Expr COMMA Expr
   55     | • Expr PLUS Expr
   56     | • Expr MINUS Expr
   57     | • Expr MUL Expr
   58     | • Expr DIV Expr
   59     | • Expr MOD Expr
   60     | • Expr OR Expr
   61     | • Expr AND Expr
   62     | • Expr BITWISEOR Expr
   63     | • Expr BITWISEXOR Expr
   64     | • Expr BITWISEAND Expr
   65     | • Expr EQ Expr
   66     | • Expr NE Expr
   66     | Expr NE • Expr
   67     | • Expr LE Expr
   68     | • Expr GE Expr
   69     | • Expr LT Expr
   70     | • Expr GT Expr
   71     | • MINUS Expr
   72     | • PLUS Expr
   73     | • NOT Expr
   74     | • IDENTIFIER LPAR RPAR
   75     | • IDENTIFIER LPAR ExprList RPAR

    LPAR        shift, and go to state 29
    MINUS       shift, and go to state 30
    NOT         shift, and go to state 31
    PLUS        shift, and go to state 32
    IDENTIFIER  shift, and go to state 33
    NATURAL     shift, and go to state 34
    DECIMAL     shift, and go to state 35
    CHRLIT      shift, and go to state 36

    Expr  go to state 119


State 79

   46 Expr: • IDENTIFIER LPAR error RPAR
   47     | • LPAR error RPAR
   48     | • IDENTIFIER
   49     | • NATURAL
   50     | • CHRLIT
   51     | • DECIMAL
   52     | • LPAR Expr RPAR
   53     | • Expr ASSIGN Expr
   54     | • Expr COMMA Expr
   55     | • Expr PLUS Expr
   56     | • Expr MINUS Expr
   57     | • Expr MUL Expr
   58     | • Expr DIV Expr
   59     | • Expr MOD Expr
   60     | • Expr OR Expr
   60     | Expr OR • Expr
   61     | • Expr AND Expr
   62     | • Expr BITWISEOR Expr
   63     | • Expr BITWISEXOR Expr
   64     | • Expr BITWISEAND Expr
   65     | • Expr EQ Expr
   66     | • Expr NE Expr
   67     | • Expr LE Expr
   68     | • Expr GE Expr
   69     | • Expr LT Expr
   70     | • Expr GT Expr
   71     | • MINUS Expr
   72     | • PLUS Expr
   73     | • NOT Expr
   74     | • IDENTIFIER LPAR RPAR
   75     | • IDENTIFIER LPAR ExprList RPAR

    LPAR        shift, and go to state 29
    MINUS       shift, and go to state 30
    NOT         shift, and go to state 31
    PLUS        shift, and go to state 32
    IDENTIFIER  shift, and go to state 33
    NATURAL     shift, and go to state 34
    DECIMAL     shift, and go to state 35
    CHRLIT      shift, and go to state 36

    Expr  go to state 120


State 80

   46 Expr: • IDENTIFIER LPAR error RPAR
   47     | • LPAR error RPAR
   48     | • IDENTIFIER
   49     | • NATURAL
   50     | • CHRLIT
   51     | • DECIMAL
   52     | • LPAR Expr RPAR
   53     | • Expr ASSIGN Expr
   54     | • Expr COMMA Expr
   55     | • Expr PLUS Expr
   55     | Expr PLUS • Expr
   56     | • Expr MINUS Expr
   57     | • Expr MUL Expr
   58     | • Expr DIV Expr
   59     | • Expr MOD Expr
   60     | • Expr OR Expr
   61     | • Expr AND Expr
   62     | • Expr BITWISEOR Expr
   63     | • Expr BITWISEXOR Expr
   64     | • Expr BITWISEAND Expr
   65     | • Expr EQ Expr
   66     | • Expr NE Expr
   67     | • Expr LE Expr
   68     | • Expr GE Expr
   69     | • Expr LT Expr
   70     | • Expr GT Expr
   71     | • MINUS Expr
   72     | • PLUS Expr
   73     | • NOT Expr
   74     | • IDENTIFIER LPAR RPAR
   75     | • IDENTIFIER LPAR ExprList RPAR

    LPAR        shift, and go to state 29
    MINUS       shift, and go to state 30
    NOT         shift, and go to state 31
    PLUS        shift, and go to state 32
    IDENTIFIER  shift, and go to state 33
    NATURAL     shift, and go to state 34
    DECIMAL     shift, and go to state 35
    CHRLIT      shift, and go to state 36

    Expr  go to state 121


State 81

   16 FunctionDeclarator: IDENTIFIER LPAR ParameterList RPAR •

    $default  reduce using rule 16 (FunctionDeclarator)


State 82

   17 ParameterList: • ParameterDeclaration
   18              | • ParameterDeclaration COMMA ParameterList
   18              | ParameterDeclaration COMMA • ParameterList
   19 ParameterDeclaration: • TypeSpec IDENTIFIER
   20                     | • TypeSpec
   25 TypeSpec: • CHAR
   26         | • INT
   27         | • VOID
   28         | • SHORT
   29         | • DOUBLE

    CHAR    shift, and go to state 1
    DOUBLE  shift, and go to state 2
    INT     shift, and go to state 3
    SHORT   shift, and go to state 4
    VOID    shift, and go to state 5

    ParameterList         go to state 122
    ParameterDeclaration  go to state 39
    TypeSpec              go to state 40


State 83

   19 ParameterDeclaration: TypeSpec IDENTIFIER •

    $default  reduce using rule 19 (ParameterDeclaration)


State 84

   34 Statement: error SEMI •

    $default  reduce using rule 34 (Statement)


State 85

   41 Statement: WHILE LPAR • Expr RPAR Statement
   46 Expr: • IDENTIFIER LPAR error RPAR
   47     | • LPAR error RPAR
   48     | • IDENTIFIER
   49     | • NATURAL
   50     | • CHRLIT
   51     | • DECIMAL
   52     | • LPAR Expr RPAR
   53     | • Expr ASSIGN Expr
   54     | • Expr COMMA Expr
   55     | • Expr PLUS Expr
   56     | • Expr MINUS Expr
   57     | • Expr MUL Expr
   58     | • Expr DIV Expr
   59     | • Expr MOD Expr
   60     | • Expr OR Expr
   61     | • Expr AND Expr
   62     | • Expr BITWISEOR Expr
   63     | • Expr BITWISEXOR Expr
   64     | • Expr BITWISEAND Expr
   65     | • Expr EQ Expr
   66     | • Expr NE Expr
   67     | • Expr LE Expr
   68     | • Expr GE Expr
   69     | • Expr LT Expr
   70     | • Expr GT Expr
   71     | • MINUS Expr
   72     | • PLUS Expr
   73     | • NOT Expr
   74     | • IDENTIFIER LPAR RPAR
   75     | • IDENTIFIER LPAR ExprList RPAR

    LPAR        shift, and go to state 29
    MINUS       shift, and go to state 30
    NOT         shift, and go to state 31
    PLUS        shift, and go to state 32
    IDENTIFIER  shift, and go to state 33
    NATURAL     shift, and go to state 34
    DECIMAL     shift, and go to state 35
    CHRLIT      shift, and go to state 36

    Expr  go to state 123


State 86

   39 Statement: IF LPAR • Expr RPAR Statement
   40          | IF LPAR • Expr RPAR Statement ELSE Statement
   46 Expr: • IDENTIFIER LPAR error RPAR
   47     | • LPAR error RPAR
   48     | • IDENTIFIER
   49     | • NATURAL
   50     | • CHRLIT
   51     | • DECIMAL
   52     | • LPAR Expr RPAR
   53     | • Expr ASSIGN Expr
   54     | • Expr COMMA Expr
   55     | • Expr PLUS Expr
   56     | • Expr MINUS Expr
   57     | • Expr MUL Expr
   58     | • Expr DIV Expr
   59     | • Expr MOD Expr
   60     | • Expr OR Expr
   61     | • Expr AND Expr
   62     | • Expr BITWISEOR Expr
   63     | • Expr BITWISEXOR Expr
   64     | • Expr BITWISEAND Expr
   65     | • Expr EQ Expr
   66     | • Expr NE Expr
   67     | • Expr LE Expr
   68     | • Expr GE Expr
   69     | • Expr LT Expr
   70     | • Expr GT Expr
   71     | • MINUS Expr
   72     | • PLUS Expr
   73     | • NOT Expr
   74     | • IDENTIFIER LPAR RPAR
   75     | • IDENTIFIER LPAR ExprList RPAR

    LPAR        shift, and go to state 29
    MINUS       shift, and go to state 30
    NOT         shift, and go to state 31
    PLUS        shift, and go to state 32
    IDENTIFIER  shift, and go to state 33
    NATURAL     shift, and go to state 34
    DECIMAL     shift, and go to state 35
    CHRLIT      shift, and go to state 36

    Expr  go to state 124


State 87

   42 Statement: RETURN SEMI •

    $default  reduce using rule 42 (Statement)


State 88

   43 Statement: RETURN Expr • SEMI
   53 Expr: Expr • ASSIGN Expr
   54     | Expr • COMMA Expr
   55     | Expr • PLUS Expr
   56     | Expr • MINUS Expr
   57     | Expr • MUL Expr
   58     | Expr • DIV Expr
   59     | Expr • MOD Expr
   60     | Expr • OR Expr
   61     | Expr • AND Expr
   62     | Expr • BITWISEOR Expr
   63     | Expr • BITWISEXOR Expr
   64     | Expr • BITWISEAND Expr
   65     | Expr • EQ Expr
   66     | Expr • NE Expr
   67     | Expr • LE Expr
   68     | Expr • GE Expr
   69     | Expr • LT Expr
   70     | Expr • GT Expr

    BITWISEAND  shift, and go to state 63
    BITWISEOR   shift, and go to state 64
    BITWISEXOR  shift, and go to state 65
    AND         shift, and go to state 66
    ASSIGN      shift, and go to state 67
    MUL         shift, and go to state 68
    COMMA       shift, and go to state 69
    DIV         shift, and go to state 70
    EQ          shift, and go to state 71
    GE          shift, and go to state 72
    GT          shift, and go to state 73
    LE          shift, and go to state 74
    LT          shift, and go to state 75
    MINUS       shift, and go to state 76
    MOD         shift, and go to state 77
    NE          shift, and go to state 78
    OR          shift, and go to state 79
    PLUS        shift, and go to state 80
    SEMI        shift, and go to state 125


State 89

   33 Statement: LBRACE error • RBRACE
   34          | error • SEMI

    RBRACE  shift, and go to state 126
    SEMI    shift, and go to state 84


State 90

   37 Statement: LBRACE RBRACE •

    $default  reduce using rule 37 (Statement)


State 91

   44 Statements: Statement •

    $default  reduce using rule 44 (Statements)


State 92

   33 Statement: • LBRACE error RBRACE
   34          | • error SEMI
   35          | • SEMI
   36          | • Expr SEMI
   37          | • LBRACE RBRACE
   38          | • LBRACE Statements RBRACE
   38          | LBRACE Statements • RBRACE
   39          | • IF LPAR Expr RPAR Statement
   40          | • IF LPAR Expr RPAR Statement ELSE Statement
   41          | • WHILE LPAR Expr RPAR Statement
   42          | • RETURN SEMI
   43          | • RETURN Expr SEMI
   45 Statements: Statements • Statement
   46 Expr: • IDENTIFIER LPAR error RPAR
   47     | • LPAR error RPAR
   48     | • IDENTIFIER
   49     | • NATURAL
   50     | • CHRLIT
   51     | • DECIMAL
   52     | • LPAR Expr RPAR
   53     | • Expr ASSIGN Expr
   54     | • Expr COMMA Expr
   55     | • Expr PLUS Expr
   56     | • Expr MINUS Expr
   57     | • Expr MUL Expr
   58     | • Expr DIV Expr
   59     | • Expr MOD Expr
   60     | • Expr OR Expr
   61     | • Expr AND Expr
   62     | • Expr BITWISEOR Expr
   63     | • Expr BITWISEXOR Expr
   64     | • Expr BITWISEAND Expr
   65     | • Expr EQ Expr
   66     | • Expr NE Expr
   67     | • Expr LE Expr
   68     | • Expr GE Expr
   69     | • Expr LT Expr
   70     | • Expr GT Expr
   71     | • MINUS Expr
   72     | • PLUS Expr
   73     | • NOT Expr
   74     | • IDENTIFIER LPAR RPAR
   75     | • IDENTIFIER LPAR ExprList RPAR

    error       shift, and go to state 41
    WHILE       shift, and go to state 42
    IF          shift, and go to state 43
    RETURN      shift, and go to state 44
    LBRACE      shift, and go to state 45
    LPAR        shift, and go to state 29
    MINUS       shift, and go to state 30
    NOT         shift, and go to state 31
    PLUS        shift, and go to state 32
    RBRACE      shift, and go to state 127
    SEMI        shift, and go to state 47
    IDENTIFIER  shift, and go to state 33
    NATURAL     shift, and go to state 34
    DECIMAL     shift, and go to state 35
    CHRLIT      shift, and go to state 36

    Statement  go to state 128
    Expr       go to state 52


State 93

    9 FunctionBody: LBRACE DeclarationsAndStatements RBRACE •

    $default  reduce using rule 9 (FunctionBody)


State 94

   12 DeclarationsAndStatements: Declaration DeclarationsAndStatements •

    $default  reduce using rule 12 (DeclarationsAndStatements)


State 95

   11 DeclarationsAndStatements: Statement DeclarationsAndStatements •

    $default  reduce using rule 11 (DeclarationsAndStatements)


State 96

   36 Statement: Expr SEMI •

    $default  reduce using rule 36 (Statement)


State 97

   24 Declarations: Declarations COMMA Declarator •

    $default  reduce using rule 24 (Declarations)


State 98

   47 Expr: LPAR error RPAR •

    $default  reduce using rule 47 (Expr)


State 99

   52 Expr: LPAR Expr RPAR •

    $default  reduce using rule 52 (Expr)


State 100

   46 Expr: IDENTIFIER LPAR error • RPAR

    RPAR  shift, and go to state 129


State 101

   46 Expr: • IDENTIFIER LPAR error RPAR
   47     | • LPAR error RPAR
   48     | • IDENTIFIER
   49     | • NATURAL
   50     | • CHRLIT
   51     | • DECIMAL
   52     | • LPAR Expr RPAR
   53     | • Expr ASSIGN Expr
   54     | • Expr COMMA Expr
   55     | • Expr PLUS Expr
   56     | • Expr MINUS Expr
   57     | • Expr MUL Expr
   58     | • Expr DIV Expr
   59     | • Expr MOD Expr
   60     | • Expr OR Expr
   61     | • Expr AND Expr
   62     | • Expr BITWISEOR Expr
   63     | • Expr BITWISEXOR Expr
   64     | • Expr BITWISEAND Expr
   65     | • Expr EQ Expr
   66     | • Expr NE Expr
   67     | • Expr LE Expr
   68     | • Expr GE Expr
   69     | • Expr LT Expr
   70     | • Expr GT Expr
   71     | • MINUS Expr
   72     | • PLUS Expr
   73     | • NOT Expr
   74     | • IDENTIFIER LPAR RPAR
   75     | • IDENTIFIER LPAR ExprList RPAR
   76 ExprList: COMMA • Expr

    LPAR        shift, and go to state 29
    MINUS       shift, and go to state 30
    NOT         shift, and go to state 31
    PLUS        shift, and go to state 32
    IDENTIFIER  shift, and go to state 33
    NATURAL     shift, and go to state 34
    DECIMAL     shift, and go to state 35
    CHRLIT      shift, and go to state 36

    Expr  go to state 130


State 102

   74 Expr: IDENTIFIER LPAR RPAR •

    $default  reduce using rule 74 (Expr)


State 103

   75 Expr: IDENTIFIER LPAR ExprList • RPAR
   77 ExprList: ExprList • COMMA Expr

    COMMA  shift, and go to state 131
    RPAR   shift, and go to state 132


State 104

   53 Expr: Expr • ASSIGN Expr
   54     | Expr • COMMA Expr
   55     | Expr • PLUS Expr
   56     | Expr • MINUS Expr
   57     | Expr • MUL Expr
   58     | Expr • DIV Expr
   59     | Expr • MOD Expr
   60     | Expr • OR Expr
   61     | Expr • AND Expr
   62     | Expr • BITWISEOR Expr
   63     | Expr • BITWISEXOR Expr
   64     | Expr • BITWISEAND Expr
   64     | Expr BITWISEAND Expr •  [BITWISEAND, BITWISEOR, BITWISEXOR, AND, ASSIGN, COMMA, OR, RPAR, SEMI]
   65     | Expr • EQ Expr
   66     | Expr • NE Expr
   67     | Expr • LE Expr
   68     | Expr • GE Expr
   69     | Expr • LT Expr
   70     | Expr • GT Expr

    MUL    shift, and go to state 68
    DIV    shift, and go to state 70
    EQ     shift, and go to state 71
    GE     shift, and go to state 72
    GT     shift, and go to state 73
    LE     shift, and go to state 74
    LT     shift, and go to state 75
    MINUS  shift, and go to state 76
    MOD    shift, and go to state 77
    NE     shift, and go to state 78
    PLUS   shift, and go to state 80

    $default  reduce using rule 64 (Expr)

    Conflict between rule 64 and token BITWISEAND resolved as reduce (%left BITWISEAND).
    Conflict between rule 64 and token BITWISEOR resolved as reduce (BITWISEOR < BITWISEAND).
    Conflict between rule 64 and token BITWISEXOR resolved as reduce (BITWISEXOR < BITWISEAND).
    Conflict between rule 64 and token AND resolved as reduce (AND < BITWISEAND).
    Conflict between rule 64 and token ASSIGN resolved as reduce (ASSIGN < BITWISEAND).
    Conflict between rule 64 and token MUL resolved as shift (BITWISEAND < MUL).
    Conflict between rule 64 and token COMMA resolved as reduce (COMMA < BITWISEAND).
    Conflict between rule 64 and token DIV resolved as shift (BITWISEAND < DIV).
    Conflict between rule 64 and token EQ resolved as shift (BITWISEAND < EQ).
    Conflict between rule 64 and token GE resolved as shift (BITWISEAND < GE).
    Conflict between rule 64 and token GT resolved as shift (BITWISEAND < GT).
    Conflict between rule 64 and token LE resolved as shift (BITWISEAND < LE).
    Conflict between rule 64 and token LT resolved as shift (BITWISEAND < LT).
    Conflict between rule 64 and token MINUS resolved as shift (BITWISEAND < MINUS).
    Conflict between rule 64 and token MOD resolved as shift (BITWISEAND < MOD).
    Conflict between rule 64 and token NE resolved as shift (BITWISEAND < NE).
    Conflict between rule 64 and token OR resolved as reduce (OR < BITWISEAND).
    Conflict between rule 64 and token PLUS resolved as shift (BITWISEAND < PLUS).


State 105

   53 Expr: Expr • ASSIGN Expr
   54     | Expr • COMMA Expr
   55     | Expr • PLUS Expr
   56     | Expr • MINUS Expr
   57     | Expr • MUL Expr
   58     | Expr • DIV Expr
   59     | Expr • MOD Expr
   60     | Expr • OR Expr
   61     | Expr • AND Expr
   62     | Expr • BITWISEOR Expr
   62     | Expr BITWISEOR Expr •  [BITWISEOR, AND, ASSIGN, COMMA, OR, RPAR, SEMI]
   63     | Expr • BITWISEXOR Expr
   64     | Expr • BITWISEAND Expr
   65     | Expr • EQ Expr
   66     | Expr • NE Expr
   67     | Expr • LE Expr
   68     | Expr • GE Expr
   69     | Expr • LT Expr
   70     | Expr • GT Expr

    BITWISEAND  shift, and go to state 63
    BITWISEXOR  shift, and go to state 65
    MUL         shift, and go to state 68
    DIV         shift, and go to state 70
    EQ          shift, and go to state 71
    GE          shift, and go to state 72
    GT          shift, and go to state 73
    LE          shift, and go to state 74
    LT          shift, and go to state 75
    MINUS       shift, and go to state 76
    MOD         shift, and go to state 77
    NE          shift, and go to state 78
    PLUS        shift, and go to state 80

    $default  reduce using rule 62 (Expr)

    Conflict between rule 62 and token BITWISEAND resolved as shift (BITWISEOR < BITWISEAND).
    Conflict between rule 62 and token BITWISEOR resolved as reduce (%left BITWISEOR).
    Conflict between rule 62 and token BITWISEXOR resolved as shift (BITWISEOR < BITWISEXOR).
    Conflict between rule 62 and token AND resolved as reduce (AND < BITWISEOR).
    Conflict between rule 62 and token ASSIGN resolved as reduce (ASSIGN < BITWISEOR).
    Conflict between rule 62 and token MUL resolved as shift (BITWISEOR < MUL).
    Conflict between rule 62 and token COMMA resolved as reduce (COMMA < BITWISEOR).
    Conflict between rule 62 and token DIV resolved as shift (BITWISEOR < DIV).
    Conflict between rule 62 and token EQ resolved as shift (BITWISEOR < EQ).
    Conflict between rule 62 and token GE resolved as shift (BITWISEOR < GE).
    Conflict between rule 62 and token GT resolved as shift (BITWISEOR < GT).
    Conflict between rule 62 and token LE resolved as shift (BITWISEOR < LE).
    Conflict between rule 62 and token LT resolved as shift (BITWISEOR < LT).
    Conflict between rule 62 and token MINUS resolved as shift (BITWISEOR < MINUS).
    Conflict between rule 62 and token MOD resolved as shift (BITWISEOR < MOD).
    Conflict between rule 62 and token NE resolved as shift (BITWISEOR < NE).
    Conflict between rule 62 and token OR resolved as reduce (OR < BITWISEOR).
    Conflict between rule 62 and token PLUS resolved as shift (BITWISEOR < PLUS).


State 106

   53 Expr: Expr • ASSIGN Expr
   54     | Expr • COMMA Expr
   55     | Expr • PLUS Expr
   56     | Expr • MINUS Expr
   57     | Expr • MUL Expr
   58     | Expr • DIV Expr
   59     | Expr • MOD Expr
   60     | Expr • OR Expr
   61     | Expr • AND Expr
   62     | Expr • BITWISEOR Expr
   63     | Expr • BITWISEXOR Expr
   63     | Expr BITWISEXOR Expr •  [BITWISEOR, BITWISEXOR, AND, ASSIGN, COMMA, OR, RPAR, SEMI]
   64     | Expr • BITWISEAND Expr
   65     | Expr • EQ Expr
   66     | Expr • NE Expr
   67     | Expr • LE Expr
   68     | Expr • GE Expr
   69     | Expr • LT Expr
   70     | Expr • GT Expr

    BITWISEAND  shift, and go to state 63
    MUL         shift, and go to state 68
    DIV         shift, and go to state 70
    EQ          shift, and go to state 71
    GE          shift, and go to state 72
    GT          shift, and go to state 73
    LE          shift, and go to state 74
    LT          shift, and go to state 75
    MINUS       shift, and go to state 76
    MOD         shift, and go to state 77
    NE          shift, and go to state 78
    PLUS        shift, and go to state 80

    $default  reduce using rule 63 (Expr)

    Conflict between rule 63 and token BITWISEAND resolved as shift (BITWISEXOR < BITWISEAND).
    Conflict between rule 63 and token BITWISEOR resolved as reduce (BITWISEOR < BITWISEXOR).
    Conflict between rule 63 and token BITWISEXOR resolved as reduce (%left BITWISEXOR).
    Conflict between rule 63 and token AND resolved as reduce (AND < BITWISEXOR).
    Conflict between rule 63 and token ASSIGN resolved as reduce (ASSIGN < BITWISEXOR).
    Conflict between rule 63 and token MUL resolved as shift (BITWISEXOR < MUL).
    Conflict between rule 63 and token COMMA resolved as reduce (COMMA < BITWISEXOR).
    Conflict between rule 63 and token DIV resolved as shift (BITWISEXOR < DIV).
    Conflict between rule 63 and token EQ resolved as shift (BITWISEXOR < EQ).
    Conflict between rule 63 and token GE resolved as shift (BITWISEXOR < GE).
    Conflict between rule 63 and token GT resolved as shift (BITWISEXOR < GT).
    Conflict between rule 63 and token LE resolved as shift (BITWISEXOR < LE).
    Conflict between rule 63 and token LT resolved as shift (BITWISEXOR < LT).
    Conflict between rule 63 and token MINUS resolved as shift (BITWISEXOR < MINUS).
    Conflict between rule 63 and token MOD resolved as shift (BITWISEXOR < MOD).
    Conflict between rule 63 and token NE resolved as shift (BITWISEXOR < NE).
    Conflict between rule 63 and token OR resolved as reduce (OR < BITWISEXOR).
    Conflict between rule 63 and token PLUS resolved as shift (BITWISEXOR < PLUS).


State 107

   53 Expr: Expr • ASSIGN Expr
   54     | Expr • COMMA Expr
   55     | Expr • PLUS Expr
   56     | Expr • MINUS Expr
   57     | Expr • MUL Expr
   58     | Expr • DIV Expr
   59     | Expr • MOD Expr
   60     | Expr • OR Expr
   61     | Expr • AND Expr
   61     | Expr AND Expr •  [AND, ASSIGN, COMMA, OR, RPAR, SEMI]
   62     | Expr • BITWISEOR Expr
   63     | Expr • BITWISEXOR Expr
   64     | Expr • BITWISEAND Expr
   65     | Expr • EQ Expr
   66     | Expr • NE Expr
   67     | Expr • LE Expr
   68     | Expr • GE Expr
   69     | Expr • LT Expr
   70     | Expr • GT Expr

    BITWISEAND  shift, and go to state 63
    BITWISEOR   shift, and go to state 64
    BITWISEXOR  shift, and go to state 65
    MUL         shift, and go to state 68
    DIV         shift, and go to state 70
    EQ          shift, and go to state 71
    GE          shift, and go to state 72
    GT          shift, and go to state 73
    LE          shift, and go to state 74
    LT          shift, and go to state 75
    MINUS       shift, and go to state 76
    MOD         shift, and go to state 77
    NE          shift, and go to state 78
    PLUS        shift, and go to state 80

    $default  reduce using rule 61 (Expr)

    Conflict between rule 61 and token BITWISEAND resolved as shift (AND < BITWISEAND).
    Conflict between rule 61 and token BITWISEOR resolved as shift (AND < BITWISEOR).
    Conflict between rule 61 and token BITWISEXOR resolved as shift (AND < BITWISEXOR).
    Conflict between rule 61 and token AND resolved as reduce (%left AND).
    Conflict between rule 61 and token ASSIGN resolved as reduce (ASSIGN < AND).
    Conflict between rule 61 and token MUL resolved as shift (AND < MUL).
    Conflict between rule 61 and token COMMA resolved as reduce (COMMA < AND).
    Conflict between rule 61 and token DIV resolved as shift (AND < DIV).
    Conflict between rule 61 and token EQ resolved as shift (AND < EQ).
    Conflict between rule 61 and token GE resolved as shift (AND < GE).
    Conflict between rule 61 and token GT resolved as shift (AND < GT).
    Conflict between rule 61 and token LE resolved as shift (AND < LE).
    Conflict between rule 61 and token LT resolved as shift (AND < LT).
    Conflict between rule 61 and token MINUS resolved as shift (AND < MINUS).
    Conflict between rule 61 and token MOD resolved as shift (AND < MOD).
    Conflict between rule 61 and token NE resolved as shift (AND < NE).
    Conflict between rule 61 and token OR resolved as reduce (OR < AND).
    Conflict between rule 61 and token PLUS resolved as shift (AND < PLUS).


State 108

   53 Expr: Expr • ASSIGN Expr
   53     | Expr ASSIGN Expr •  [ASSIGN, COMMA, RPAR, SEMI]
   54     | Expr • COMMA Expr
   55     | Expr • PLUS Expr
   56     | Expr • MINUS Expr
   57     | Expr • MUL Expr
   58     | Expr • DIV Expr
   59     | Expr • MOD Expr
   60     | Expr • OR Expr
   61     | Expr • AND Expr
   62     | Expr • BITWISEOR Expr
   63     | Expr • BITWISEXOR Expr
   64     | Expr • BITWISEAND Expr
   65     | Expr • EQ Expr
   66     | Expr • NE Expr
   67     | Expr • LE Expr
   68     | Expr • GE Expr
   69     | Expr • LT Expr
   70     | Expr • GT Expr

    BITWISEAND  shift, and go to state 63
    BITWISEOR   shift, and go to state 64
    BITWISEXOR  shift, and go to state 65
    AND         shift, and go to state 66
    MUL         shift, and go to state 68
    DIV         shift, and go to state 70
    EQ          shift, and go to state 71
    GE          shift, and go to state 72
    GT          shift, and go to state 73
    LE          shift, and go to state 74
    LT          shift, and go to state 75
    MINUS       shift, and go to state 76
    MOD         shift, and go to state 77
    NE          shift, and go to state 78
    OR          shift, and go to state 79
    PLUS        shift, and go to state 80

    $default  reduce using rule 53 (Expr)

    Conflict between rule 53 and token BITWISEAND resolved as shift (ASSIGN < BITWISEAND).
    Conflict between rule 53 and token BITWISEOR resolved as shift (ASSIGN < BITWISEOR).
    Conflict between rule 53 and token BITWISEXOR resolved as shift (ASSIGN < BITWISEXOR).
    Conflict between rule 53 and token AND resolved as shift (ASSIGN < AND).
    Conflict between rule 53 and token ASSIGN resolved as reduce (%left ASSIGN).
    Conflict between rule 53 and token MUL resolved as shift (ASSIGN < MUL).
    Conflict between rule 53 and token COMMA resolved as reduce (COMMA < ASSIGN).
    Conflict between rule 53 and token DIV resolved as shift (ASSIGN < DIV).
    Conflict between rule 53 and token EQ resolved as shift (ASSIGN < EQ).
    Conflict between rule 53 and token GE resolved as shift (ASSIGN < GE).
    Conflict between rule 53 and token GT resolved as shift (ASSIGN < GT).
    Conflict between rule 53 and token LE resolved as shift (ASSIGN < LE).
    Conflict between rule 53 and token LT resolved as shift (ASSIGN < LT).
    Conflict between rule 53 and token MINUS resolved as shift (ASSIGN < MINUS).
    Conflict between rule 53 and token MOD resolved as shift (ASSIGN < MOD).
    Conflict between rule 53 and token NE resolved as shift (ASSIGN < NE).
    Conflict between rule 53 and token OR resolved as shift (ASSIGN < OR).
    Conflict between rule 53 and token PLUS resolved as shift (ASSIGN < PLUS).


State 109

   53 Expr: Expr • ASSIGN Expr
   54     | Expr • COMMA Expr
   55     | Expr • PLUS Expr
   56     | Expr • MINUS Expr
   57     | Expr • MUL Expr
   57     | Expr MUL Expr •  [BITWISEAND, BITWISEOR, BITWISEXOR, AND, ASSIGN, MUL, COMMA, DIV, EQ, GE, GT, LE, LT, MINUS, MOD, NE, OR, PLUS, RPAR, SEMI]
   58     | Expr • DIV Expr
   59     | Expr • MOD Expr
   60     | Expr • OR Expr
   61     | Expr • AND Expr
   62     | Expr • BITWISEOR Expr
   63     | Expr • BITWISEXOR Expr
   64     | Expr • BITWISEAND Expr
   65     | Expr • EQ Expr
   66     | Expr • NE Expr
   67     | Expr • LE Expr
   68     | Expr • GE Expr
   69     | Expr • LT Expr
   70     | Expr • GT Expr

    $default  reduce using rule 57 (Expr)

    Conflict between rule 57 and token BITWISEAND resolved as reduce (BITWISEAND < MUL).
    Conflict between rule 57 and token BITWISEOR resolved as reduce (BITWISEOR < MUL).
    Conflict between rule 57 and token BITWISEXOR resolved as reduce (BITWISEXOR < MUL).
    Conflict between rule 57 and token AND resolved as reduce (AND < MUL).
    Conflict between rule 57 and token ASSIGN resolved as reduce (ASSIGN < MUL).
    Conflict between rule 57 and token MUL resolved as reduce (%left MUL).
    Conflict between rule 57 and token COMMA resolved as reduce (COMMA < MUL).
    Conflict between rule 57 and token DIV resolved as reduce (%left DIV).
    Conflict between rule 57 and token EQ resolved as reduce (EQ < MUL).
    Conflict between rule 57 and token GE resolved as reduce (GE < MUL).
    Conflict between rule 57 and token GT resolved as reduce (GT < MUL).
    Conflict between rule 57 and token LE resolved as reduce (LE < MUL).
    Conflict between rule 57 and token LT resolved as reduce (LT < MUL).
    Conflict between rule 57 and token MINUS resolved as reduce (MINUS < MUL).
    Conflict between rule 57 and token MOD resolved as reduce (%left MOD).
    Conflict between rule 57 and token NE resolved as reduce (NE < MUL).
    Conflict between rule 57 and token OR resolved as reduce (OR < MUL).
    Conflict between rule 57 and token PLUS resolved as reduce (PLUS < MUL).


State 110

   53 Expr: Expr • ASSIGN Expr
   54     | Expr • COMMA Expr
   54     | Expr COMMA Expr •  [COMMA, RPAR, SEMI]
   55     | Expr • PLUS Expr
   56     | Expr • MINUS Expr
   57     | Expr • MUL Expr
   58     | Expr • DIV Expr
   59     | Expr • MOD Expr
   60     | Expr • OR Expr
   61     | Expr • AND Expr
   62     | Expr • BITWISEOR Expr
   63     | Expr • BITWISEXOR Expr
   64     | Expr • BITWISEAND Expr
   65     | Expr • EQ Expr
   66     | Expr • NE Expr
   67     | Expr • LE Expr
   68     | Expr • GE Expr
   69     | Expr • LT Expr
   70     | Expr • GT Expr

    BITWISEAND  shift, and go to state 63
    BITWISEOR   shift, and go to state 64
    BITWISEXOR  shift, and go to state 65
    AND         shift, and go to state 66
    ASSIGN      shift, and go to state 67
    MUL         shift, and go to state 68
    DIV         shift, and go to state 70
    EQ          shift, and go to state 71
    GE          shift, and go to state 72
    GT          shift, and go to state 73
    LE          shift, and go to state 74
    LT          shift, and go to state 75
    MINUS       shift, and go to state 76
    MOD         shift, and go to state 77
    NE          shift, and go to state 78
    OR          shift, and go to state 79
    PLUS        shift, and go to state 80

    $default  reduce using rule 54 (Expr)

    Conflict between rule 54 and token BITWISEAND resolved as shift (COMMA < BITWISEAND).
    Conflict between rule 54 and token BITWISEOR resolved as shift (COMMA < BITWISEOR).
    Conflict between rule 54 and token BITWISEXOR resolved as shift (COMMA < BITWISEXOR).
    Conflict between rule 54 and token AND resolved as shift (COMMA < AND).
    Conflict between rule 54 and token ASSIGN resolved as shift (COMMA < ASSIGN).
    Conflict between rule 54 and token MUL resolved as shift (COMMA < MUL).
    Conflict between rule 54 and token COMMA resolved as reduce (%left COMMA).
    Conflict between rule 54 and token DIV resolved as shift (COMMA < DIV).
    Conflict between rule 54 and token EQ resolved as shift (COMMA < EQ).
    Conflict between rule 54 and token GE resolved as shift (COMMA < GE).
    Conflict between rule 54 and token GT resolved as shift (COMMA < GT).
    Conflict between rule 54 and token LE resolved as shift (COMMA < LE).
    Conflict between rule 54 and token LT resolved as shift (COMMA < LT).
    Conflict between rule 54 and token MINUS resolved as shift (COMMA < MINUS).
    Conflict between rule 54 and token MOD resolved as shift (COMMA < MOD).
    Conflict between rule 54 and token NE resolved as shift (COMMA < NE).
    Conflict between rule 54 and token OR resolved as shift (COMMA < OR).
    Conflict between rule 54 and token PLUS resolved as shift (COMMA < PLUS).


State 111

   53 Expr: Expr • ASSIGN Expr
   54     | Expr • COMMA Expr
   55     | Expr • PLUS Expr
   56     | Expr • MINUS Expr
   57     | Expr • MUL Expr
   58     | Expr • DIV Expr
   58     | Expr DIV Expr •  [BITWISEAND, BITWISEOR, BITWISEXOR, AND, ASSIGN, MUL, COMMA, DIV, EQ, GE, GT, LE, LT, MINUS, MOD, NE, OR, PLUS, RPAR, SEMI]
   59     | Expr • MOD Expr
   60     | Expr • OR Expr
   61     | Expr • AND Expr
   62     | Expr • BITWISEOR Expr
   63     | Expr • BITWISEXOR Expr
   64     | Expr • BITWISEAND Expr
   65     | Expr • EQ Expr
   66     | Expr • NE Expr
   67     | Expr • LE Expr
   68     | Expr • GE Expr
   69     | Expr • LT Expr
   70     | Expr • GT Expr

    $default  reduce using rule 58 (Expr)

    Conflict between rule 58 and token BITWISEAND resolved as reduce (BITWISEAND < DIV).
    Conflict between rule 58 and token BITWISEOR resolved as reduce (BITWISEOR < DIV).
    Conflict between rule 58 and token BITWISEXOR resolved as reduce (BITWISEXOR < DIV).
    Conflict between rule 58 and token AND resolved as reduce (AND < DIV).
    Conflict between rule 58 and token ASSIGN resolved as reduce (ASSIGN < DIV).
    Conflict between rule 58 and token MUL resolved as reduce (%left MUL).
    Conflict between rule 58 and token COMMA resolved as reduce (COMMA < DIV).
    Conflict between rule 58 and token DIV resolved as reduce (%left DIV).
    Conflict between rule 58 and token EQ resolved as reduce (EQ < DIV).
    Conflict between rule 58 and token GE resolved as reduce (GE < DIV).
    Conflict between rule 58 and token GT resolved as reduce (GT < DIV).
    Conflict between rule 58 and token LE resolved as reduce (LE < DIV).
    Conflict between rule 58 and token LT resolved as reduce (LT < DIV).
    Conflict between rule 58 and token MINUS resolved as reduce (MINUS < DIV).
    Conflict between rule 58 and token MOD resolved as reduce (%left MOD).
    Conflict between rule 58 and token NE resolved as reduce (NE < DIV).
    Conflict between rule 58 and token OR resolved as reduce (OR < DIV).
    Conflict between rule 58 and token PLUS resolved as reduce (PLUS < DIV).


State 112

   53 Expr: Expr • ASSIGN Expr
   54     | Expr • COMMA Expr
   55     | Expr • PLUS Expr
   56     | Expr • MINUS Expr
   57     | Expr • MUL Expr
   58     | Expr • DIV Expr
   59     | Expr • MOD Expr
   60     | Expr • OR Expr
   61     | Expr • AND Expr
   62     | Expr • BITWISEOR Expr
   63     | Expr • BITWISEXOR Expr
   64     | Expr • BITWISEAND Expr
   65     | Expr • EQ Expr
   65     | Expr EQ Expr •  [BITWISEAND, BITWISEOR, BITWISEXOR, AND, ASSIGN, COMMA, EQ, NE, OR, RPAR, SEMI]
   66     | Expr • NE Expr
   67     | Expr • LE Expr
   68     | Expr • GE Expr
   69     | Expr • LT Expr
   70     | Expr • GT Expr

    MUL    shift, and go to state 68
    DIV    shift, and go to state 70
    GE     shift, and go to state 72
    GT     shift, and go to state 73
    LE     shift, and go to state 74
    LT     shift, and go to state 75
    MINUS  shift, and go to state 76
    MOD    shift, and go to state 77
    PLUS   shift, and go to state 80

    $default  reduce using rule 65 (Expr)

    Conflict between rule 65 and token BITWISEAND resolved as reduce (BITWISEAND < EQ).
    Conflict between rule 65 and token BITWISEOR resolved as reduce (BITWISEOR < EQ).
    Conflict between rule 65 and token BITWISEXOR resolved as reduce (BITWISEXOR < EQ).
    Conflict between rule 65 and token AND resolved as reduce (AND < EQ).
    Conflict between rule 65 and token ASSIGN resolved as reduce (ASSIGN < EQ).
    Conflict between rule 65 and token MUL resolved as shift (EQ < MUL).
    Conflict between rule 65 and token COMMA resolved as reduce (COMMA < EQ).
    Conflict between rule 65 and token DIV resolved as shift (EQ < DIV).
    Conflict between rule 65 and token EQ resolved as reduce (%left EQ).
    Conflict between rule 65 and token GE resolved as shift (EQ < GE).
    Conflict between rule 65 and token GT resolved as shift (EQ < GT).
    Conflict between rule 65 and token LE resolved as shift (EQ < LE).
    Conflict between rule 65 and token LT resolved as shift (EQ < LT).
    Conflict between rule 65 and token MINUS resolved as shift (EQ < MINUS).
    Conflict between rule 65 and token MOD resolved as shift (EQ < MOD).
    Conflict between rule 65 and token NE resolved as reduce (%left NE).
    Conflict between rule 65 and token OR resolved as reduce (OR < EQ).
    Conflict between rule 65 and token PLUS resolved as shift (EQ < PLUS).


State 113

   53 Expr: Expr • ASSIGN Expr
   54     | Expr • COMMA Expr
   55     | Expr • PLUS Expr
   56     | Expr • MINUS Expr
   57     | Expr • MUL Expr
   58     | Expr • DIV Expr
   59     | Expr • MOD Expr
   60     | Expr • OR Expr
   61     | Expr • AND Expr
   62     | Expr • BITWISEOR Expr
   63     | Expr • BITWISEXOR Expr
   64     | Expr • BITWISEAND Expr
   65     | Expr • EQ Expr
   66     | Expr • NE Expr
   67     | Expr • LE Expr
   68     | Expr • GE Expr
   68     | Expr GE Expr •  [BITWISEAND, BITWISEOR, BITWISEXOR, AND, ASSIGN, COMMA, EQ, GE, GT, LE, LT, NE, OR, RPAR, SEMI]
   69     | Expr • LT Expr
   70     | Expr • GT Expr

    MUL    shift, and go to state 68
    DIV    shift, and go to state 70
    MINUS  shift, and go to state 76
    MOD    shift, and go to state 77
    PLUS   shift, and go to state 80

    $default  reduce using rule 68 (Expr)

    Conflict between rule 68 and token BITWISEAND resolved as reduce (BITWISEAND < GE).
    Conflict between rule 68 and token BITWISEOR resolved as reduce (BITWISEOR < GE).
    Conflict between rule 68 and token BITWISEXOR resolved as reduce (BITWISEXOR < GE).
    Conflict between rule 68 and token AND resolved as reduce (AND < GE).
    Conflict between rule 68 and token ASSIGN resolved as reduce (ASSIGN < GE).
    Conflict between rule 68 and token MUL resolved as shift (GE < MUL).
    Conflict between rule 68 and token COMMA resolved as reduce (COMMA < GE).
    Conflict between rule 68 and token DIV resolved as shift (GE < DIV).
    Conflict between rule 68 and token EQ resolved as reduce (EQ < GE).
    Conflict between rule 68 and token GE resolved as reduce (%left GE).
    Conflict between rule 68 and token GT resolved as reduce (%left GT).
    Conflict between rule 68 and token LE resolved as reduce (%left LE).
    Conflict between rule 68 and token LT resolved as reduce (%left LT).
    Conflict between rule 68 and token MINUS resolved as shift (GE < MINUS).
    Conflict between rule 68 and token MOD resolved as shift (GE < MOD).
    Conflict between rule 68 and token NE resolved as reduce (NE < GE).
    Conflict between rule 68 and token OR resolved as reduce (OR < GE).
    Conflict between rule 68 and token PLUS resolved as shift (GE < PLUS).


State 114

   53 Expr: Expr • ASSIGN Expr
   54     | Expr • COMMA Expr
   55     | Expr • PLUS Expr
   56     | Expr • MINUS Expr
   57     | Expr • MUL Expr
   58     | Expr • DIV Expr
   59     | Expr • MOD Expr
   60     | Expr • OR Expr
   61     | Expr • AND Expr
   62     | Expr • BITWISEOR Expr
   63     | Expr • BITWISEXOR Expr
   64     | Expr • BITWISEAND Expr
   65     | Expr • EQ Expr
   66     | Expr • NE Expr
   67     | Expr • LE Expr
   68     | Expr • GE Expr
   69     | Expr • LT Expr
   70     | Expr • GT Expr
   70     | Expr GT Expr •  [BITWISEAND, BITWISEOR, BITWISEXOR, AND, ASSIGN, COMMA, EQ, GE, GT, LE, LT, NE, OR, RPAR, SEMI]

    MUL    shift, and go to state 68
    DIV    shift, and go to state 70
    MINUS  shift, and go to state 76
    MOD    shift, and go to state 77
    PLUS   shift, and go to state 80

    $default  reduce using rule 70 (Expr)

    Conflict between rule 70 and token BITWISEAND resolved as reduce (BITWISEAND < GT).
    Conflict between rule 70 and token BITWISEOR resolved as reduce (BITWISEOR < GT).
    Conflict between rule 70 and token BITWISEXOR resolved as reduce (BITWISEXOR < GT).
    Conflict between rule 70 and token AND resolved as reduce (AND < GT).
    Conflict between rule 70 and token ASSIGN resolved as reduce (ASSIGN < GT).
    Conflict between rule 70 and token MUL resolved as shift (GT < MUL).
    Conflict between rule 70 and token COMMA resolved as reduce (COMMA < GT).
    Conflict between rule 70 and token DIV resolved as shift (GT < DIV).
    Conflict between rule 70 and token EQ resolved as reduce (EQ < GT).
    Conflict between rule 70 and token GE resolved as reduce (%left GE).
    Conflict between rule 70 and token GT resolved as reduce (%left GT).
    Conflict between rule 70 and token LE resolved as reduce (%left LE).
    Conflict between rule 70 and token LT resolved as reduce (%left LT).
    Conflict between rule 70 and token MINUS resolved as shift (GT < MINUS).
    Conflict between rule 70 and token MOD resolved as shift (GT < MOD).
    Conflict between rule 70 and token NE resolved as reduce (NE < GT).
    Conflict between rule 70 and token OR resolved as reduce (OR < GT).
    Conflict between rule 70 and token PLUS resolved as shift (GT < PLUS).


State 115

   53 Expr: Expr • ASSIGN Expr
   54     | Expr • COMMA Expr
   55     | Expr • PLUS Expr
   56     | Expr • MINUS Expr
   57     | Expr • MUL Expr
   58     | Expr • DIV Expr
   59     | Expr • MOD Expr
   60     | Expr • OR Expr
   61     | Expr • AND Expr
   62     | Expr • BITWISEOR Expr
   63     | Expr • BITWISEXOR Expr
   64     | Expr • BITWISEAND Expr
   65     | Expr • EQ Expr
   66     | Expr • NE Expr
   67     | Expr • LE Expr
   67     | Expr LE Expr •  [BITWISEAND, BITWISEOR, BITWISEXOR, AND, ASSIGN, COMMA, EQ, GE, GT, LE, LT, NE, OR, RPAR, SEMI]
   68     | Expr • GE Expr
   69     | Expr • LT Expr
   70     | Expr • GT Expr

    MUL    shift, and go to state 68
    DIV    shift, and go to state 70
    MINUS  shift, and go to state 76
    MOD    shift, and go to state 77
    PLUS   shift, and go to state 80

    $default  reduce using rule 67 (Expr)

    Conflict between rule 67 and token BITWISEAND resolved as reduce (BITWISEAND < LE).
    Conflict between rule 67 and token BITWISEOR resolved as reduce (BITWISEOR < LE).
    Conflict between rule 67 and token BITWISEXOR resolved as reduce (BITWISEXOR < LE).
    Conflict between rule 67 and token AND resolved as reduce (AND < LE).
    Conflict between rule 67 and token ASSIGN resolved as reduce (ASSIGN < LE).
    Conflict between rule 67 and token MUL resolved as shift (LE < MUL).
    Conflict between rule 67 and token COMMA resolved as reduce (COMMA < LE).
    Conflict between rule 67 and token DIV resolved as shift (LE < DIV).
    Conflict between rule 67 and token EQ resolved as reduce (EQ < LE).
    Conflict between rule 67 and token GE resolved as reduce (%left GE).
    Conflict between rule 67 and token GT resolved as reduce (%left GT).
    Conflict between rule 67 and token LE resolved as reduce (%left LE).
    Conflict between rule 67 and token LT resolved as reduce (%left LT).
    Conflict between rule 67 and token MINUS resolved as shift (LE < MINUS).
    Conflict between rule 67 and token MOD resolved as shift (LE < MOD).
    Conflict between rule 67 and token NE resolved as reduce (NE < LE).
    Conflict between rule 67 and token OR resolved as reduce (OR < LE).
    Conflict between rule 67 and token PLUS resolved as shift (LE < PLUS).


State 116

   53 Expr: Expr • ASSIGN Expr
   54     | Expr • COMMA Expr
   55     | Expr • PLUS Expr
   56     | Expr • MINUS Expr
   57     | Expr • MUL Expr
   58     | Expr • DIV Expr
   59     | Expr • MOD Expr
   60     | Expr • OR Expr
   61     | Expr • AND Expr
   62     | Expr • BITWISEOR Expr
   63     | Expr • BITWISEXOR Expr
   64     | Expr • BITWISEAND Expr
   65     | Expr • EQ Expr
   66     | Expr • NE Expr
   67     | Expr • LE Expr
   68     | Expr • GE Expr
   69     | Expr • LT Expr
   69     | Expr LT Expr •  [BITWISEAND, BITWISEOR, BITWISEXOR, AND, ASSIGN, COMMA, EQ, GE, GT, LE, LT, NE, OR, RPAR, SEMI]
   70     | Expr • GT Expr

    MUL    shift, and go to state 68
    DIV    shift, and go to state 70
    MINUS  shift, and go to state 76
    MOD    shift, and go to state 77
    PLUS   shift, and go to state 80

    $default  reduce using rule 69 (Expr)

    Conflict between rule 69 and token BITWISEAND resolved as reduce (BITWISEAND < LT).
    Conflict between rule 69 and token BITWISEOR resolved as reduce (BITWISEOR < LT).
    Conflict between rule 69 and token BITWISEXOR resolved as reduce (BITWISEXOR < LT).
    Conflict between rule 69 and token AND resolved as reduce (AND < LT).
    Conflict between rule 69 and token ASSIGN resolved as reduce (ASSIGN < LT).
    Conflict between rule 69 and token MUL resolved as shift (LT < MUL).
    Conflict between rule 69 and token COMMA resolved as reduce (COMMA < LT).
    Conflict between rule 69 and token DIV resolved as shift (LT < DIV).
    Conflict between rule 69 and token EQ resolved as reduce (EQ < LT).
    Conflict between rule 69 and token GE resolved as reduce (%left GE).
    Conflict between rule 69 and token GT resolved as reduce (%left GT).
    Conflict between rule 69 and token LE resolved as reduce (%left LE).
    Conflict between rule 69 and token LT resolved as reduce (%left LT).
    Conflict between rule 69 and token MINUS resolved as shift (LT < MINUS).
    Conflict between rule 69 and token MOD resolved as shift (LT < MOD).
    Conflict between rule 69 and token NE resolved as reduce (NE < LT).
    Conflict between rule 69 and token OR resolved as reduce (OR < LT).
    Conflict between rule 69 and token PLUS resolved as shift (LT < PLUS).


State 117

   53 Expr: Expr • ASSIGN Expr
   54     | Expr • COMMA Expr
   55     | Expr • PLUS Expr
   56     | Expr • MINUS Expr
   56     | Expr MINUS Expr •  [BITWISEAND, BITWISEOR, BITWISEXOR, AND, ASSIGN, COMMA, EQ, GE, GT, LE, LT, MINUS, NE, OR, PLUS, RPAR, SEMI]
   57     | Expr • MUL Expr
   58     | Expr • DIV Expr
   59     | Expr • MOD Expr
   60     | Expr • OR Expr
   61     | Expr • AND Expr
   62     | Expr • BITWISEOR Expr
   63     | Expr • BITWISEXOR Expr
   64     | Expr • BITWISEAND Expr
   65     | Expr • EQ Expr
   66     | Expr • NE Expr
   67     | Expr • LE Expr
   68     | Expr • GE Expr
   69     | Expr • LT Expr
   70     | Expr • GT Expr

    MUL  shift, and go to state 68
    DIV  shift, and go to state 70
    MOD  shift, and go to state 77

    $default  reduce using rule 56 (Expr)

    Conflict between rule 56 and token BITWISEAND resolved as reduce (BITWISEAND < MINUS).
    Conflict between rule 56 and token BITWISEOR resolved as reduce (BITWISEOR < MINUS).
    Conflict between rule 56 and token BITWISEXOR resolved as reduce (BITWISEXOR < MINUS).
    Conflict between rule 56 and token AND resolved as reduce (AND < MINUS).
    Conflict between rule 56 and token ASSIGN resolved as reduce (ASSIGN < MINUS).
    Conflict between rule 56 and token MUL resolved as shift (MINUS < MUL).
    Conflict between rule 56 and token COMMA resolved as reduce (COMMA < MINUS).
    Conflict between rule 56 and token DIV resolved as shift (MINUS < DIV).
    Conflict between rule 56 and token EQ resolved as reduce (EQ < MINUS).
    Conflict between rule 56 and token GE resolved as reduce (GE < MINUS).
    Conflict between rule 56 and token GT resolved as reduce (GT < MINUS).
    Conflict between rule 56 and token LE resolved as reduce (LE < MINUS).
    Conflict between rule 56 and token LT resolved as reduce (LT < MINUS).
    Conflict between rule 56 and token MINUS resolved as reduce (%left MINUS).
    Conflict between rule 56 and token MOD resolved as shift (MINUS < MOD).
    Conflict between rule 56 and token NE resolved as reduce (NE < MINUS).
    Conflict between rule 56 and token OR resolved as reduce (OR < MINUS).
    Conflict between rule 56 and token PLUS resolved as reduce (%left PLUS).


State 118

   53 Expr: Expr • ASSIGN Expr
   54     | Expr • COMMA Expr
   55     | Expr • PLUS Expr
   56     | Expr • MINUS Expr
   57     | Expr • MUL Expr
   58     | Expr • DIV Expr
   59     | Expr • MOD Expr
   59     | Expr MOD Expr •  [BITWISEAND, BITWISEOR, BITWISEXOR, AND, ASSIGN, MUL, COMMA, DIV, EQ, GE, GT, LE, LT, MINUS, MOD, NE, OR, PLUS, RPAR, SEMI]
   60     | Expr • OR Expr
   61     | Expr • AND Expr
   62     | Expr • BITWISEOR Expr
   63     | Expr • BITWISEXOR Expr
   64     | Expr • BITWISEAND Expr
   65     | Expr • EQ Expr
   66     | Expr • NE Expr
   67     | Expr • LE Expr
   68     | Expr • GE Expr
   69     | Expr • LT Expr
   70     | Expr • GT Expr

    $default  reduce using rule 59 (Expr)

    Conflict between rule 59 and token BITWISEAND resolved as reduce (BITWISEAND < MOD).
    Conflict between rule 59 and token BITWISEOR resolved as reduce (BITWISEOR < MOD).
    Conflict between rule 59 and token BITWISEXOR resolved as reduce (BITWISEXOR < MOD).
    Conflict between rule 59 and token AND resolved as reduce (AND < MOD).
    Conflict between rule 59 and token ASSIGN resolved as reduce (ASSIGN < MOD).
    Conflict between rule 59 and token MUL resolved as reduce (%left MUL).
    Conflict between rule 59 and token COMMA resolved as reduce (COMMA < MOD).
    Conflict between rule 59 and token DIV resolved as reduce (%left DIV).
    Conflict between rule 59 and token EQ resolved as reduce (EQ < MOD).
    Conflict between rule 59 and token GE resolved as reduce (GE < MOD).
    Conflict between rule 59 and token GT resolved as reduce (GT < MOD).
    Conflict between rule 59 and token LE resolved as reduce (LE < MOD).
    Conflict between rule 59 and token LT resolved as reduce (LT < MOD).
    Conflict between rule 59 and token MINUS resolved as reduce (MINUS < MOD).
    Conflict between rule 59 and token MOD resolved as reduce (%left MOD).
    Conflict between rule 59 and token NE resolved as reduce (NE < MOD).
    Conflict between rule 59 and token OR resolved as reduce (OR < MOD).
    Conflict between rule 59 and token PLUS resolved as reduce (PLUS < MOD).


State 119

   53 Expr: Expr • ASSIGN Expr
   54     | Expr • COMMA Expr
   55     | Expr • PLUS Expr
   56     | Expr • MINUS Expr
   57     | Expr • MUL Expr
   58     | Expr • DIV Expr
   59     | Expr • MOD Expr
   60     | Expr • OR Expr
   61     | Expr • AND Expr
   62     | Expr • BITWISEOR Expr
   63     | Expr • BITWISEXOR Expr
   64     | Expr • BITWISEAND Expr
   65     | Expr • EQ Expr
   66     | Expr • NE Expr
   66     | Expr NE Expr •  [BITWISEAND, BITWISEOR, BITWISEXOR, AND, ASSIGN, COMMA, EQ, NE, OR, RPAR, SEMI]
   67     | Expr • LE Expr
   68     | Expr • GE Expr
   69     | Expr • LT Expr
   70     | Expr • GT Expr

    MUL    shift, and go to state 68
    DIV    shift, and go to state 70
    GE     shift, and go to state 72
    GT     shift, and go to state 73
    LE     shift, and go to state 74
    LT     shift, and go to state 75
    MINUS  shift, and go to state 76
    MOD    shift, and go to state 77
    PLUS   shift, and go to state 80

    $default  reduce using rule 66 (Expr)

    Conflict between rule 66 and token BITWISEAND resolved as reduce (BITWISEAND < NE).
    Conflict between rule 66 and token BITWISEOR resolved as reduce (BITWISEOR < NE).
    Conflict between rule 66 and token BITWISEXOR resolved as reduce (BITWISEXOR < NE).
    Conflict between rule 66 and token AND resolved as reduce (AND < NE).
    Conflict between rule 66 and token ASSIGN resolved as reduce (ASSIGN < NE).
    Conflict between rule 66 and token MUL resolved as shift (NE < MUL).
    Conflict between rule 66 and token COMMA resolved as reduce (COMMA < NE).
    Conflict between rule 66 and token DIV resolved as shift (NE < DIV).
    Conflict between rule 66 and token EQ resolved as reduce (%left EQ).
    Conflict between rule 66 and token GE resolved as shift (NE < GE).
    Conflict between rule 66 and token GT resolved as shift (NE < GT).
    Conflict between rule 66 and token LE resolved as shift (NE < LE).
    Conflict between rule 66 and token LT resolved as shift (NE < LT).
    Conflict between rule 66 and token MINUS resolved as shift (NE < MINUS).
    Conflict between rule 66 and token MOD resolved as shift (NE < MOD).
    Conflict between rule 66 and token NE resolved as reduce (%left NE).
    Conflict between rule 66 and token OR resolved as reduce (OR < NE).
    Conflict between rule 66 and token PLUS resolved as shift (NE < PLUS).


State 120

   53 Expr: Expr • ASSIGN Expr
   54     | Expr • COMMA Expr
   55     | Expr • PLUS Expr
   56     | Expr • MINUS Expr
   57     | Expr • MUL Expr
   58     | Expr • DIV Expr
   59     | Expr • MOD Expr
   60     | Expr • OR Expr
   60     | Expr OR Expr •  [ASSIGN, COMMA, OR, RPAR, SEMI]
   61     | Expr • AND Expr
   62     | Expr • BITWISEOR Expr
   63     | Expr • BITWISEXOR Expr
   64     | Expr • BITWISEAND Expr
   65     | Expr • EQ Expr
   66     | Expr • NE Expr
   67     | Expr • LE Expr
   68     | Expr • GE Expr
   69     | Expr • LT Expr
   70     | Expr • GT Expr

    BITWISEAND  shift, and go to state 63
    BITWISEOR   shift, and go to state 64
    BITWISEXOR  shift, and go to state 65
    AND         shift, and go to state 66
    MUL         shift, and go to state 68
    DIV         shift, and go to state 70
    EQ          shift, and go to state 71
    GE          shift, and go to state 72
    GT          shift, and go to state 73
    LE          shift, and go to state 74
    LT          shift, and go to state 75
    MINUS       shift, and go to state 76
    MOD         shift, and go to state 77
    NE          shift, and go to state 78
    PLUS        shift, and go to state 80

    $default  reduce using rule 60 (Expr)

    Conflict between rule 60 and token BITWISEAND resolved as shift (OR < BITWISEAND).
    Conflict between rule 60 and token BITWISEOR resolved as shift (OR < BITWISEOR).
    Conflict between rule 60 and token BITWISEXOR resolved as shift (OR < BITWISEXOR).
    Conflict between rule 60 and token AND resolved as shift (OR < AND).
    Conflict between rule 60 and token ASSIGN resolved as reduce (ASSIGN < OR).
    Conflict between rule 60 and token MUL resolved as shift (OR < MUL).
    Conflict between rule 60 and token COMMA resolved as reduce (COMMA < OR).
    Conflict between rule 60 and token DIV resolved as shift (OR < DIV).
    Conflict between rule 60 and token EQ resolved as shift (OR < EQ).
    Conflict between rule 60 and token GE resolved as shift (OR < GE).
    Conflict between rule 60 and token GT resolved as shift (OR < GT).
    Conflict between rule 60 and token LE resolved as shift (OR < LE).
    Conflict between rule 60 and token LT resolved as shift (OR < LT).
    Conflict between rule 60 and token MINUS resolved as shift (OR < MINUS).
    Conflict between rule 60 and token MOD resolved as shift (OR < MOD).
    Conflict between rule 60 and token NE resolved as shift (OR < NE).
    Conflict between rule 60 and token OR resolved as reduce (%left OR).
    Conflict between rule 60 and token PLUS resolved as shift (OR < PLUS).


State 121

   53 Expr: Expr • ASSIGN Expr
   54     | Expr • COMMA Expr
   55     | Expr • PLUS Expr
   55     | Expr PLUS Expr •  [BITWISEAND, BITWISEOR, BITWISEXOR, AND, ASSIGN, COMMA, EQ, GE, GT, LE, LT, MINUS, NE, OR, PLUS, RPAR, SEMI]
   56     | Expr • MINUS Expr
   57     | Expr • MUL Expr
   58     | Expr • DIV Expr
   59     | Expr • MOD Expr
   60     | Expr • OR Expr
   61     | Expr • AND Expr
   62     | Expr • BITWISEOR Expr
   63     | Expr • BITWISEXOR Expr
   64     | Expr • BITWISEAND Expr
   65     | Expr • EQ Expr
   66     | Expr • NE Expr
   67     | Expr • LE Expr
   68     | Expr • GE Expr
   69     | Expr • LT Expr
   70     | Expr • GT Expr

    MUL  shift, and go to state 68
    DIV  shift, and go to state 70
    MOD  shift, and go to state 77

    $default  reduce using rule 55 (Expr)

    Conflict between rule 55 and token BITWISEAND resolved as reduce (BITWISEAND < PLUS).
    Conflict between rule 55 and token BITWISEOR resolved as reduce (BITWISEOR < PLUS).
    Conflict between rule 55 and token BITWISEXOR resolved as reduce (BITWISEXOR < PLUS).
    Conflict between rule 55 and token AND resolved as reduce (AND < PLUS).
    Conflict between rule 55 and token ASSIGN resolved as reduce (ASSIGN < PLUS).
    Conflict between rule 55 and token MUL resolved as shift (PLUS < MUL).
    Conflict between rule 55 and token COMMA resolved as reduce (COMMA < PLUS).
    Conflict between rule 55 and token DIV resolved as shift (PLUS < DIV).
    Conflict between rule 55 and token EQ resolved as reduce (EQ < PLUS).
    Conflict between rule 55 and token GE resolved as reduce (GE < PLUS).
    Conflict between rule 55 and token GT resolved as reduce (GT < PLUS).
    Conflict between rule 55 and token LE resolved as reduce (LE < PLUS).
    Conflict between rule 55 and token LT resolved as reduce (LT < PLUS).
    Conflict between rule 55 and token MINUS resolved as reduce (%left MINUS).
    Conflict between rule 55 and token MOD resolved as shift (PLUS < MOD).
    Conflict between rule 55 and token NE resolved as reduce (NE < PLUS).
    Conflict between rule 55 and token OR resolved as reduce (OR < PLUS).
    Conflict between rule 55 and token PLUS resolved as reduce (%left PLUS).


State 122

   18 ParameterList: ParameterDeclaration COMMA ParameterList •

    $default  reduce using rule 18 (ParameterList)


State 123

   41 Statement: WHILE LPAR Expr • RPAR Statement
   53 Expr: Expr • ASSIGN Expr
   54     | Expr • COMMA Expr
   55     | Expr • PLUS Expr
   56     | Expr • MINUS Expr
   57     | Expr • MUL Expr
   58     | Expr • DIV Expr
   59     | Expr • MOD Expr
   60     | Expr • OR Expr
   61     | Expr • AND Expr
   62     | Expr • BITWISEOR Expr
   63     | Expr • BITWISEXOR Expr
   64     | Expr • BITWISEAND Expr
   65     | Expr • EQ Expr
   66     | Expr • NE Expr
   67     | Expr • LE Expr
   68     | Expr • GE Expr
   69     | Expr • LT Expr
   70     | Expr • GT Expr

    BITWISEAND  shift, and go to state 63
    BITWISEOR   shift, and go to state 64
    BITWISEXOR  shift, and go to state 65
    AND         shift, and go to state 66
    ASSIGN      shift, and go to state 67
    MUL         shift, and go to state 68
    COMMA       shift, and go to state 69
    DIV         shift, and go to state 70
    EQ          shift, and go to state 71
    GE          shift, and go to state 72
    GT          shift, and go to state 73
    LE          shift, and go to state 74
    LT          shift, and go to state 75
    MINUS       shift, and go to state 76
    MOD         shift, and go to state 77
    NE          shift, and go to state 78
    OR          shift, and go to state 79
    PLUS        shift, and go to state 80
    RPAR        shift, and go to state 133


State 124

   39 Statement: IF LPAR Expr • RPAR Statement
   40          | IF LPAR Expr • RPAR Statement ELSE Statement
   53 Expr: Expr • ASSIGN Expr
   54     | Expr • COMMA Expr
   55     | Expr • PLUS Expr
   56     | Expr • MINUS Expr
   57     | Expr • MUL Expr
   58     | Expr • DIV Expr
   59     | Expr • MOD Expr
   60     | Expr • OR Expr
   61     | Expr • AND Expr
   62     | Expr • BITWISEOR Expr
   63     | Expr • BITWISEXOR Expr
   64     | Expr • BITWISEAND Expr
   65     | Expr • EQ Expr
   66     | Expr • NE Expr
   67     | Expr • LE Expr
   68     | Expr • GE Expr
   69     | Expr • LT Expr
   70     | Expr • GT Expr

    BITWISEAND  shift, and go to state 63
    BITWISEOR   shift, and go to state 64
    BITWISEXOR  shift, and go to state 65
    AND         shift, and go to state 66
    ASSIGN      shift, and go to state 67
    MUL         shift, and go to state 68
    COMMA       shift, and go to state 69
    DIV         shift, and go to state 70
    EQ          shift, and go to state 71
    GE          shift, and go to state 72
    GT          shift, and go to state 73
    LE          shift, and go to state 74
    LT          shift, and go to state 75
    MINUS       shift, and go to state 76
    MOD         shift, and go to state 77
    NE          shift, and go to state 78
    OR          shift, and go to state 79
    PLUS        shift, and go to state 80
    RPAR        shift, and go to state 134


State 125

   43 Statement: RETURN Expr SEMI •

    $default  reduce using rule 43 (Statement)


State 126

   33 Statement: LBRACE error RBRACE •

    $default  reduce using rule 33 (Statement)


State 127

   38 Statement: LBRACE Statements RBRACE •

    $default  reduce using rule 38 (Statement)


State 128

   45 Statements: Statements Statement •

    $default  reduce using rule 45 (Statements)


State 129

   46 Expr: IDENTIFIER LPAR error RPAR •

    $default  reduce using rule 46 (Expr)


State 130

   53 Expr: Expr • ASSIGN Expr
   54     | Expr • COMMA Expr
   55     | Expr • PLUS Expr
   56     | Expr • MINUS Expr
   57     | Expr • MUL Expr
   58     | Expr • DIV Expr
   59     | Expr • MOD Expr
   60     | Expr • OR Expr
   61     | Expr • AND Expr
   62     | Expr • BITWISEOR Expr
   63     | Expr • BITWISEXOR Expr
   64     | Expr • BITWISEAND Expr
   65     | Expr • EQ Expr
   66     | Expr • NE Expr
   67     | Expr • LE Expr
   68     | Expr • GE Expr
   69     | Expr • LT Expr
   70     | Expr • GT Expr
   76 ExprList: COMMA Expr •  [COMMA, RPAR]

    BITWISEAND  shift, and go to state 63
    BITWISEOR   shift, and go to state 64
    BITWISEXOR  shift, and go to state 65
    AND         shift, and go to state 66
    ASSIGN      shift, and go to state 67
    MUL         shift, and go to state 68
    DIV         shift, and go to state 70
    EQ          shift, and go to state 71
    GE          shift, and go to state 72
    GT          shift, and go to state 73
    LE          shift, and go to state 74
    LT          shift, and go to state 75
    MINUS       shift, and go to state 76
    MOD         shift, and go to state 77
    NE          shift, and go to state 78
    OR          shift, and go to state 79
    PLUS        shift, and go to state 80

    $default  reduce using rule 76 (ExprList)

    Conflict between rule 76 and token COMMA resolved as reduce (%left COMMA).


State 131

   46 Expr: • IDENTIFIER LPAR error RPAR
   47     | • LPAR error RPAR
   48     | • IDENTIFIER
   49     | • NATURAL
   50     | • CHRLIT
   51     | • DECIMAL
   52     | • LPAR Expr RPAR
   53     | • Expr ASSIGN Expr
   54     | • Expr COMMA Expr
   55     | • Expr PLUS Expr
   56     | • Expr MINUS Expr
   57     | • Expr MUL Expr
   58     | • Expr DIV Expr
   59     | • Expr MOD Expr
   60     | • Expr OR Expr
   61     | • Expr AND Expr
   62     | • Expr BITWISEOR Expr
   63     | • Expr BITWISEXOR Expr
   64     | • Expr BITWISEAND Expr
   65     | • Expr EQ Expr
   66     | • Expr NE Expr
   67     | • Expr LE Expr
   68     | • Expr GE Expr
   69     | • Expr LT Expr
   70     | • Expr GT Expr
   71     | • MINUS Expr
   72     | • PLUS Expr
   73     | • NOT Expr
   74     | • IDENTIFIER LPAR RPAR
   75     | • IDENTIFIER LPAR ExprList RPAR
   77 ExprList: ExprList COMMA • Expr

    LPAR        shift, and go to state 29
    MINUS       shift, and go to state 30
    NOT         shift, and go to state 31
    PLUS        shift, and go to state 32
    IDENTIFIER  shift, and go to state 33
    NATURAL     shift, and go to state 34
    DECIMAL     shift, and go to state 35
    CHRLIT      shift, and go to state 36

    Expr  go to state 135


State 132

   75 Expr: IDENTIFIER LPAR ExprList RPAR •

    $default  reduce using rule 75 (Expr)


State 133

   33 Statement: • LBRACE error RBRACE
   34          | • error SEMI
   35          | • SEMI
   36          | • Expr SEMI
   37          | • LBRACE RBRACE
   38          | • LBRACE Statements RBRACE
   39          | • IF LPAR Expr RPAR Statement
   40          | • IF LPAR Expr RPAR Statement ELSE Statement
   41          | • WHILE LPAR Expr RPAR Statement
   41          | WHILE LPAR Expr RPAR • Statement
   42          | • RETURN SEMI
   43          | • RETURN Expr SEMI
   46 Expr: • IDENTIFIER LPAR error RPAR
   47     | • LPAR error RPAR
   48     | • IDENTIFIER
   49     | • NATURAL
   50     | • CHRLIT
   51     | • DECIMAL
   52     | • LPAR Expr RPAR
   53     | • Expr ASSIGN Expr
   54     | • Expr COMMA Expr
   55     | • Expr PLUS Expr
   56     | • Expr MINUS Expr
   57     | • Expr MUL Expr
   58     | • Expr DIV Expr
   59     | • Expr MOD Expr
   60     | • Expr OR Expr
   61     | • Expr AND Expr
   62     | • Expr BITWISEOR Expr
   63     | • Expr BITWISEXOR Expr
   64     | • Expr BITWISEAND Expr
   65     | • Expr EQ Expr
   66     | • Expr NE Expr
   67     | • Expr LE Expr
   68     | • Expr GE Expr
   69     | • Expr LT Expr
   70     | • Expr GT Expr
   71     | • MINUS Expr
   72     | • PLUS Expr
   73     | • NOT Expr
   74     | • IDENTIFIER LPAR RPAR
   75     | • IDENTIFIER LPAR ExprList RPAR

    error       shift, and go to state 41
    WHILE       shift, and go to state 42
    IF          shift, and go to state 43
    RETURN      shift, and go to state 44
    LBRACE      shift, and go to state 45
    LPAR        shift, and go to state 29
    MINUS       shift, and go to state 30
    NOT         shift, and go to state 31
    PLUS        shift, and go to state 32
    SEMI        shift, and go to state 47
    IDENTIFIER  shift, and go to state 33
    NATURAL     shift, and go to state 34
    DECIMAL     shift, and go to state 35
    CHRLIT      shift, and go to state 36

    Statement  go to state 136
    Expr       go to state 52


State 134

   33 Statement: • LBRACE error RBRACE
   34          | • error SEMI
   35          | • SEMI
   36          | • Expr SEMI
   37          | • LBRACE RBRACE
   38          | • LBRACE Statements RBRACE
   39          | • IF LPAR Expr RPAR Statement
   39          | IF LPAR Expr RPAR • Statement
   40          | • IF LPAR Expr RPAR Statement ELSE Statement
   40          | IF LPAR Expr RPAR • Statement ELSE Statement
   41          | • WHILE LPAR Expr RPAR Statement
   42          | • RETURN SEMI
   43          | • RETURN Expr SEMI
   46 Expr: • IDENTIFIER LPAR error RPAR
   47     | • LPAR error RPAR
   48     | • IDENTIFIER
   49     | • NATURAL
   50     | • CHRLIT
   51     | • DECIMAL
   52     | • LPAR Expr RPAR
   53     | • Expr ASSIGN Expr
   54     | • Expr COMMA Expr
   55     | • Expr PLUS Expr
   56     | • Expr MINUS Expr
   57     | • Expr MUL Expr
   58     | • Expr DIV Expr
   59     | • Expr MOD Expr
   60     | • Expr OR Expr
   61     | • Expr AND Expr
   62     | • Expr BITWISEOR Expr
   63     | • Expr BITWISEXOR Expr
   64     | • Expr BITWISEAND Expr
   65     | • Expr EQ Expr
   66     | • Expr NE Expr
   67     | • Expr LE Expr
   68     | • Expr GE Expr
   69     | • Expr LT Expr
   70     | • Expr GT Expr
   71     | • MINUS Expr
   72     | • PLUS Expr
   73     | • NOT Expr
   74     | • IDENTIFIER LPAR RPAR
   75     | • IDENTIFIER LPAR ExprList RPAR

    error       shift, and go to state 41
    WHILE       shift, and go to state 42
    IF          shift, and go to state 43
    RETURN      shift, and go to state 44
    LBRACE      shift, and go to state 45
    LPAR        shift, and go to state 29
    MINUS       shift, and go to state 30
    NOT         shift, and go to state 31
    PLUS        shift, and go to state 32
    SEMI        shift, and go to state 47
    IDENTIFIER  shift, and go to state 33
    NATURAL     shift, and go to state 34
    DECIMAL     shift, and go to state 35
    CHRLIT      shift, and go to state 36

    Statement  go to state 137
    Expr       go to state 52


State 135

   53 Expr: Expr • ASSIGN Expr
   54     | Expr • COMMA Expr
   55     | Expr • PLUS Expr
   56     | Expr • MINUS Expr
   57     | Expr • MUL Expr
   58     | Expr • DIV Expr
   59     | Expr • MOD Expr
   60     | Expr • OR Expr
   61     | Expr • AND Expr
   62     | Expr • BITWISEOR Expr
   63     | Expr • BITWISEXOR Expr
   64     | Expr • BITWISEAND Expr
   65     | Expr • EQ Expr
   66     | Expr • NE Expr
   67     | Expr • LE Expr
   68     | Expr • GE Expr
   69     | Expr • LT Expr
   70     | Expr • GT Expr
   77 ExprList: ExprList COMMA Expr •  [COMMA, RPAR]

    BITWISEAND  shift, and go to state 63
    BITWISEOR   shift, and go to state 64
    BITWISEXOR  shift, and go to state 65
    AND         shift, and go to state 66
    ASSIGN      shift, and go to state 67
    MUL         shift, and go to state 68
    DIV         shift, and go to state 70
    EQ          shift, and go to state 71
    GE          shift, and go to state 72
    GT          shift, and go to state 73
    LE          shift, and go to state 74
    LT          shift, and go to state 75
    MINUS       shift, and go to state 76
    MOD         shift, and go to state 77
    NE          shift, and go to state 78
    OR          shift, and go to state 79
    PLUS        shift, and go to state 80

    $default  reduce using rule 77 (ExprList)

    Conflict between rule 77 and token COMMA resolved as reduce (%left COMMA).


State 136

   41 Statement: WHILE LPAR Expr RPAR Statement •

    $default  reduce using rule 41 (Statement)


State 137

   39 Statement: IF LPAR Expr RPAR Statement •  [error, CHAR, DOUBLE, INT, SHORT, WHILE, IF, RETURN, VOID, LBRACE, LPAR, MINUS, NOT, PLUS, RBRACE, SEMI, IDENTIFIER, NATURAL, DECIMAL, CHRLIT]
   40          | IF LPAR Expr RPAR Statement • ELSE Statement

    ELSE  shift, and go to state 138

    $default  reduce using rule 39 (Statement)

    Conflict between rule 39 and token ELSE resolved as shift (RPAR < ELSE).


State 138

   33 Statement: • LBRACE error RBRACE
   34          | • error SEMI
   35          | • SEMI
   36          | • Expr SEMI
   37          | • LBRACE RBRACE
   38          | • LBRACE Statements RBRACE
   39          | • IF LPAR Expr RPAR Statement
   40          | • IF LPAR Expr RPAR Statement ELSE Statement
   40          | IF LPAR Expr RPAR Statement ELSE • Statement
   41          | • WHILE LPAR Expr RPAR Statement
   42          | • RETURN SEMI
   43          | • RETURN Expr SEMI
   46 Expr: • IDENTIFIER LPAR error RPAR
   47     | • LPAR error RPAR
   48     | • IDENTIFIER
   49     | • NATURAL
   50     | • CHRLIT
   51     | • DECIMAL
   52     | • LPAR Expr RPAR
   53     | • Expr ASSIGN Expr
   54     | • Expr COMMA Expr
   55     | • Expr PLUS Expr
   56     | • Expr MINUS Expr
   57     | • Expr MUL Expr
   58     | • Expr DIV Expr
   59     | • Expr MOD Expr
   60     | • Expr OR Expr
   61     | • Expr AND Expr
   62     | • Expr BITWISEOR Expr
   63     | • Expr BITWISEXOR Expr
   64     | • Expr BITWISEAND Expr
   65     | • Expr EQ Expr
   66     | • Expr NE Expr
   67     | • Expr LE Expr
   68     | • Expr GE Expr
   69     | • Expr LT Expr
   70     | • Expr GT Expr
   71     | • MINUS Expr
   72     | • PLUS Expr
   73     | • NOT Expr
   74     | • IDENTIFIER LPAR RPAR
   75     | • IDENTIFIER LPAR ExprList RPAR

    error       shift, and go to state 41
    WHILE       shift, and go to state 42
    IF          shift, and go to state 43
    RETURN      shift, and go to state 44
    LBRACE      shift, and go to state 45
    LPAR        shift, and go to state 29
    MINUS       shift, and go to state 30
    NOT         shift, and go to state 31
    PLUS        shift, and go to state 32
    SEMI        shift, and go to state 47
    IDENTIFIER  shift, and go to state 33
    NATURAL     shift, and go to state 34
    DECIMAL     shift, and go to state 35
    CHRLIT      shift, and go to state 36

    Statement  go to state 139
    Expr       go to state 52


State 139

   40 Statement: IF LPAR Expr RPAR Statement ELSE Statement •

    $default  reduce using rule 40 (Statement)
